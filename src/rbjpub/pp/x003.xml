<?xml version="1.0"?>
<!DOCTYPE ProofPower SYSTEM "pp-symbol.ent">
<xldoc xmlns="http://www.x-logic.org/xmlns/draft/xld"
       xmlns:xhtml="http://www.w3.org/TR/xhtml1/strict"
       id="$Id: x003.xml,v 1.6 2008/04/06 13:07:17 rbj01 Exp $"
       name="x003"
       title="Analyticity and Deduction"
       description="A proof of an elementary connection between alalyticity and deduction"
       keywords="logic proofpower analyticity deduction"
       class="con"
       root="../../"
       path="rbjpub/pp/"
       up="index.html"
       rbjhome="../rbj.htm"
       maintitle="mnt">

<section title="Overview">
<abstract>
Formal definitions are given of the concepts analytic and demonstrative and it is proven that under these definitions the two concepts are coextensive.
This is done twice using two slightly different models, the first very simple but with perhaps an unconvincing treatment of analyticity, the second a little more complex and hopefully a little more convincing.
</abstract>

<secbody>
<sbcol>
<secref title="Introduction"/>
<secref title="Model 1"/>
<subsec title="Listing of Theory x003t (model 1)" href="x003t.html" />
</sbcol>
<sbcol>
<secref title="Model 2"/>
<subsec title="Listing of Theory x003u (model 2)" href="x003u.html" />
<secref title="Model 3"/>
<subsec title="Listing of Theory x003v (model 3)" href="x003v.html" />
</sbcol>
</secbody>
</section>

<section title="Introduction">
<abstract>
The motivation for these models and the correspondence of the defined concepts with prior usage is discussed, and the models compared.
</abstract>
<secbody title="Motivation">
<sbcol>
<subsec>
<p>
For the purposes of an essay on the foundations of semantics I am seeking to motivate the study of semantic foundations with some words about the relationship between semantics and deduction.
I thought a good way to do this would be to describe the concepts <i>analytic</i> and <i>demonstrative</i> and show that they are coextensive (given suitable but not unreasonable definitions).
</p><p>
I posted a first draft of this section to the yahoo group "philosophers group", which I had just joined expecting some discussion about the merits of the definitions, the significance of the result, or the details of the presentation, but not anticipating any debate about the truth of the conclusion, which is a trivial consequence of the definitions.
</p>
</subsec>
</sbcol>
<sbcol>
<subsec>
<p>
The truth of my "thesis" was disputed, and some pertinent questions were raised about the meaning of my definitions.
I decided that formalisation would serve not only to make the meaning quite definite but also permit a (hopefully definitive) proof of the truth of my conclusion.
</p><p>
The first model which I produced was somewhat simpler than the original draft argument, particularly in its treatment of analyticity (the definition of which was one item on which clarification had been sought), so I produced a second slight elaboration in which the notion of analyticity is more fully treated and a better account of the notion of sound deductive system is given.
</p>
</subsec>
</sbcol>
</secbody>

<secbody title="Remarks about Prior Usage">
<sbcol>
<subsec title="Analytic">
<p>
As far as the fidelity of my formal definitions to prior usage is concerned, the concept of analyticity concerned here is intended to correspond closely to the concept as it was understood by the logical positivists, and also as it is described by Quine in his "Two Dogmas of Empiricism", which may be glossed as "true in virtue of meaning".
I did have a bit of difficulty in expanding this "in virtue of" in the informal account, as necessary to permit the proof.
This is not difficult in the formal models.
</p>
</subsec>
<subsec title="Demonstrative">
<p>
The term demonstrative was chosen to connect in with the idea of formal derivability without ending up talking about all the possible conclusions of deductive proofs.
Relevant precedents for this are the use of this term in Artistotle, Locke and Hume.
An important feature of the term demonstrative is that a proof is only demonstrative if its premises are necessary (in Aristotle) or intuitive (in Locke and Hume) where it is clear in Locke and Hume that only necessary propositions can be intuitive in the required sense, and hence that, subject to suitable constraints on the soundness of the deductive system all demonstrative propositions are necessary.
</p>
</subsec>
</sbcol>
<sbcol>
<subsec title="Demonstrative (cont)">
<p>
However, though the word "demonstrative" may be the best word, the primary desire was to connect the notion of analyticity with the kind of soundness proof which is conducted usually for a formal system to show (inter alia) its consistency.
In this context the axioms are shown true with respect to the semantics, and the inference rules are shown to respect the semantics, with the effect that all the theorems are known to be true under the semantics, and hence analytic.
It is the (rather elementary) connection between proof in sound deductive systems and the semantic notion of analyticity that is the target of the exercise, and therefore the defined concept of "demonstrative" is wholly semantic, does not talk about necessity, and might be thought to differ from the Aristotelian notion on that account.
</p>
<p>
A further difficulty arised from incompleteness.
There is no single (r.e.) deductive system which proves all the analytic truths.
In these models, the only constraint on axioms is that they are analytic, and the only constraint on inference rules is that they preserve truth under the relevant semantics.
This does yeild the desired identity, but certainly represents a more liberal deductive regime than that in Locke and Hume, who require that the axioms and rules be intuitively certain.
To get the identity I am in effect permitting sound deductive systems in which the most tenuous and obscure (but true) large cardinal axioms are employed, and it is doubtful that Locke would have thought these intuitively certain.
</p>
<p>
So far as Aristotle is concerned, the rules are syllogistic, and he has no conception of the linguistically pluralistic world inhabited by modern logicians, so again our notion of demonstrative is on the generous side.
</p>
</subsec>
</sbcol>
</secbody>
</section>

<ft lang="xl-ign" rest="">
set_flag("pp_show_HOL_types", true);
set_flag("pp_show_HOL_types", false);
</ft>

<section title="Model 1" tag="1">
<abstract>
In this model the notion of analyticity in some language is effectively taken as primitive, by defining a <i>semantics</i> as an analyticity predicate.
Language generic notions of analytic and demonstrative are then defined and shown to be coextensive. 
</abstract>
<secbody>
<sbcol>
<subsec title="The Theory x003t">
The new theory is first created.
<ft lang="xl-sml" rest="">
open_theory "hol";
force_new_theory "x003t";
set_pc "hol";
</ft>
</subsec>
<subsec title="Language and Semantics">
<p>
A language is a set of sentences with a given semantics.
For present purpose a truth conditional semantics is sufficient.
In fact all we need to know is what sentences in the language are analytic (which is a subset of the information we would normally expect to be derivable from the truth conditions), so we model "a semantics" as a predicate over the sentences of a language which tells you which of them are analytic.
A language may be thought of as two properties of sentences, the property of being well formed and the property of being analytic, but in fact we do not make use of this concept and therefore do not provide  a definition.
</p>
</subsec>
<subsec title="Analytic">
<p>
We here define <i>analtyic</i> as a property of ordered pairs of which the first is a sentence and the second is a semantics for the some language.
Since a semantics in this model is just an analyticity predicate, sentence <i>sen</i> is analytic under the semantics <i>sem</i> iff the predicate <i>sem</i> is true of the sentence <i>sen</i>.
The application of a predicate is function application, which is written by juxtapostion so this is written simply as <i>sem sen</i>. 
</p>
<holconst><holsig>
&tvb;	analytic : 's &cross; ('s &rarr;  BOOL)  &rarr;  BOOL
</holsig>
<holpred>
&tvb;	&forall;sen sem&bull; analytic (sen, sem) &equiv; sem sen
</holpred>
</holconst>
</subsec>
<subsec title="Sound Deductive System">
<p>
A deductive system is a relation between sets of sentences and sentences, that of derivability.
Soundness is a relation between deductive systems and semantics, that of preserving analyticity.
i.e. a deductive system is sound if whenever all of the premises of an inference are analytic so is the conclusion.
This is a weaker condition than is normally proved in a soundness proof, but it suffices for our purposes, and cannot be strengthened without a more informative model of the semantics.
</p>
<holconst><holsig>
&tvb;	sound : (('s &rarr;  BOOL) &cross; 's &rarr;  BOOL) &cross; ('s &rarr;  BOOL)  &rarr;  BOOL
</holsig>
<holpred>
&tvb;	&forall;ds sem&bull; sound (ds, sem)
&tvb;	&equiv; &forall;prem conc&bull; ds (prem, conc)
&tvb;	  &rArr; ((&forall;s&bull; prem s &rArr; sem s) &rArr; sem conc)
</holpred>
</holconst>
</subsec>
<subsec title="Demonstrative">
<p>
<i>demonstrative</i> is a relation between sentences and semantics (that the sentence is derivable in a deductive system which is sound with respect to that semantics).
A sentence is demonstrative under a semantics if there is a deductive system, sound with respect to that semantics, under which the sentence is derivable from the empty set of premises.
The "empty set of premises" is modelled as an always false (contradictory) predicate, which is written as the lambda abstraction &qqtel;&lambda;s&bull;F&qqter;, the function which always returns "false".
</p>
<holconst><holsig>
&tvb;	demonstrative : 's &cross; ('s &rarr;  BOOL)  &rarr;  BOOL
</holsig>
<holpred>
&tvb;	&forall;sen sem&bull; demonstrative (sen, sem)
&tvb;	&equiv; &exist; ds&bull; sound (ds, sem) &and; ds ((&lambda;s&bull;F), sen)
</holpred>
</holconst>
</subsec>
</sbcol>
</secbody>

<secbody>
<sbcol>
<subsec title="The Proof">
The following is the proof that analytic and demonstrative are coextensive.
<ft lang="xl-sml" rest="">
set_goal([], &qqtel;&forall;sen sem&bull; analytic (sen, sem) &equiv; demonstrative (sen, sem)&qqter;);
a (rewrite_tac(map get_spec [
		&qqtel;analytic&qqter;,
		&qqtel;demonstrative&qqter;,
		&qqtel;sound&qqter;]));
</ft>
<ft lang="xl-gft" rest="">
(* ?&turnstil; *)  &qqtel;&forall; sen sem
           &bull; sem sen
               &equiv; (&exist; ds
               &bull; (&forall; prem conc&bull; ds (prem, conc) &rArr; (&forall; s&bull; prem s &rArr; sem s) &rArr; sem conc)
                   &and; ds ((&lambda; s&bull; F), sen))&qqter;
</ft>
<ft lang="xl-sml" rest="">
a (REPEAT strip_tac);
</ft>
<ft lang="xl-gft" rest="">
(* *** Goal "2" *** *)

(*  2 *)  &qqtel;&forall; prem conc&bull; ds (prem, conc) &rArr; (&forall; s&bull; prem s &rArr; sem s) &rArr; sem conc&qqter;
(*  1 *)  &qqtel;ds ((&lambda; s&bull; F), sen)&qqter;

(* ?&turnstil; *)  &qqtel;sem sen&qqter;


(* *** Goal "1" *** *)

(*  1 *)  &qqtel;sem sen&qqter;

(* ?&turnstil; *)  &qqtel;&exist; ds
           &bull; (&forall; prem conc&bull; ds (prem, conc) &rArr; (&forall; s&bull; prem s &rArr; sem s) &rArr; sem conc)
               &and; ds ((&lambda; s&bull; F), sen)&qqter;
</ft>
<ft lang="xl-sml" rest="">
(* *** Goal "1" *** *)
a (&exist;_tac &qqtel;&lambda;(ss,s)&bull; s = sen&qqter;
	THEN rewrite_tac[]);
</ft>
<ft lang="xl-gft" rest="">
(*  1 *)  &qqtel;sem sen&qqter;

(* ?&turnstil; *)  &qqtel;&forall; prem conc&bull; conc = sen &rArr; (&forall; s&bull; prem s &rArr; sem s) &rArr; sem conc&qqter;
</ft>
<ft lang="xl-sml" rest="">
a (REPEAT strip_tac
	THEN asm_rewrite_tac[]);
</ft>
<ft lang="xl-gft" rest="">
Current goal achieved, next goal is:

(* *** Goal "2" *** *)

(*  2 *)  &qqtel;&forall; prem conc&bull; ds (prem, conc) &rArr; (&forall; s&bull; prem s &rArr; sem s) &rArr; sem conc&qqter;
(*  1 *)  &qqtel;ds ((&lambda; s&bull; F), sen)&qqter;

(* ?&turnstil; *)  &qqtel;sem sen&qqter;
</ft>
<ft lang="xl-sml" rest="">
(* *** Goal "2" *** *)
a (list_spec_nth_asm_tac 2 [&qqtel;(&lambda; s&bull; F)&qqter;, &qqtel;sen&qqter;]);
</ft>
<ft lang="xl-gft" rest="">
(*  4 *)  &qqtel;&forall; prem conc&bull; ds (prem, conc) &rArr; (&forall; s&bull; prem s &rArr; sem s) &rArr; sem conc&qqter;
(*  3 *)  &qqtel;ds ((&lambda; s&bull; F), sen)&qqter;
(*  2 *)  &qqtel;(&lambda; s&bull; F) s&qqter;
(*  1 *)  &qqtel;&not; sem s&qqter;

(* ?&turnstil; *)  &qqtel;sem sen&qqter;
</ft>
<ft lang="xl-sml" rest="">
a (swap_nth_asm_concl_tac 2
	THEN rewrite_tac[]);
</ft>
<ft lang="xl-gft" rest="">
Current and main goal achieved
</ft>
<ft lang="xl-sml" rest="">
save_pop_thm "Theorem1";
</ft>
</subsec>
</sbcol>
</secbody>
</section>

<section title="Model 2" tag="2">
<abstract>
An improved model of semantics is now adopted, permitting a more informative definition of analyticity and a stronger soundness predicate for the deductive systems, more closely matching usual practice in soundness proofs.
</abstract>
<secbody>
<sbcol>
<subsec title="The Theory x003u">
The new theory is first created.
<ft lang="xl-sml" rest="">
open_theory "hol";
force_new_theory "x003u";
set_pc "hol";
</ft>
</subsec>
<subsec title="Language and Semantics">
<p>
We now model a semantics as a full account of truth conditions.
For this we use a function which tells you under what circumstances a sentence is true.
What a "circumstance" is depends upon the language, but for a language talking about the world it would typically be something like a possible world plus an assignment to free variables of values in that possible world.
</p><p>
As far as this model is concerned the structure of a circumstance is immaterial and the type variable &qqco;'c&qqter; is used.
A semantics, for the purposes of this model is therefore something of type &qqco;'s &rarr; 'c &rarr; BOOL&qqter;.
This is a higher order function which takes two arguments, first a sentence then a "circumstance", and yields the truth value of the sentence under those circumstances.
In other words, a semantics is a function which assigns to each sentence of the language the set of conditions under which it is true.
</p><p>
This change has only very minor consequences for the model and the proof.
It does permits a more informative definition of analyticity and a more realistic account of what it is for a deductive system to be sound.
One extra step is needed in the proof script.
</p>
<p>
Note that the use of the term <i>sentence</i> here differs from the usage specific to the first order predicate calculus in that a sentence is not required to be closed.
</p>
</subsec>
<subsec title="Analytic">
<p>
The definition of <i>analytic</i> says that a sentence is analytic if it is true under the semantics whatever the "circumstances".
i.e. you can tell that its true from the semantics alone, without knowing the "facts" (the second argument to the truth valuation function).
<i>sem sen c</i> is the truth value of sentence <i>sen</i> in circumstances <i>c</i> under semantics <i>sem</i>.
</p>
<holconst><holsig>
&tvb;	analytic : 's &cross; ('s &rarr; 'c &rarr; BOOL) &rarr; BOOL
</holsig>
<holpred>
&tvb;	&forall;sen sem&bull; analytic (sen, sem) &equiv; &forall;c&bull; sem sen c
</holpred>
</holconst>
</subsec>
<subsec title="Sound Deductive System">
<p>
Instead of saying that a sound deductive system is one which preserves analyticity, we now say that it preserves truth under all circumstances.
i.e. if &qqtel;(prem, conc)&qqter; is a derivation under the deductive system, then under every circumstance which satisfies all sentences in the premises &qqtel;prem&qqter; will also satisfy the conclusion &qqtel;conc&qqter; (all this relative to some specific semantics).
</p>
<holconst><holsig>
&tvb;	sound : (('s &rarr;  BOOL) &cross; 's &rarr;  BOOL)
&tvb;		&cross; ('s &rarr; 'c &rarr;  BOOL)
&tvb;		&rarr;  BOOL
</holsig>
<holpred>
&tvb;	&forall;ds sem&bull; sound (ds, sem)
&tvb;	&equiv; &forall;prem conc&bull; ds (prem, conc)
&tvb;	  &rArr; &forall;c&bull; ((&forall;s&bull; prem s &rArr; sem s c) &rArr; sem conc c)
</holpred>
</holconst>
</subsec>
<subsec title="Demonstrative">
<p>
<i>demonstrative</i> is a relation between sentences and semantics (that the sentence is derivable in a deductive system which is sound with respect to that semantics).
This definition is unchanged from the first model, though it now uses the revised soundness predicate and consequently has a different type.
</p>
<holconst><holsig>
&tvb;	demonstrative : 's &cross; ('s &rarr; 'c &rarr;  BOOL)  &rarr;  BOOL
</holsig>
<holpred>
&tvb;	&forall;sen sem&bull; demonstrative (sen, sem)
&tvb;	&equiv; &exist; ds&bull; sound (ds, sem) &and; ds ((&lambda;s&bull;F), sen)
</holpred>
</holconst>
</subsec>
</sbcol>
</secbody>

<secbody>
<sbcol>
<subsec title="The Proof">
The following is the proof that analytic and demonstrative are coextensive.
<ft lang="xl-sml" rest="">
set_goal([], &qqtel;&forall;sen sem&bull; analytic (sen, sem) &equiv; demonstrative (sen, sem)&qqter;);
a (rewrite_tac(map get_spec [
		&qqtel;analytic&qqter;,
		&qqtel;demonstrative&qqter;,
		&qqtel;sound&qqter;]));
</ft>
<ft lang="xl-gft" rest="">
(* ?&turnstil; *)  &qqtel;&forall; sen sem
           &bull; (&forall; c&bull; sem sen c)
               &equiv; (&exist; ds
               &bull; (&forall; prem conc&bull; ds (prem, conc) &rArr; (&forall; c&bull; (&forall; s&bull; prem s &rArr; sem s c) &rArr; sem conc c))
                   &and; ds ((&lambda; s&bull; F), sen))&qqter;
</ft>
<ft lang="xl-sml" rest="">
a (REPEAT strip_tac);
</ft>
<ft lang="xl-gft" rest="">
(* *** Goal "2" *** *)

(*  2 *)  &qqtel;&forall; prem conc&bull; ds (prem, conc) &rArr; (&forall; c&bull; (&forall; s&bull; prem s &rArr; sem s c) &rArr; sem conc c)&qqter;
(*  1 *)  &qqtel;ds ((&lambda; s&bull; F), sen)&qqter;

(* ?&turnstil; *)  &qqtel;sem sen c&qqter;

(* *** Goal "1" *** *)

(*  1 *)  &qqtel;&forall; c&bull; sem sen c&qqter;

(* ?&turnstil; *)  &qqtel;&exist; ds
           &bull; (&forall; prem conc&bull; ds (prem, conc) &rArr; (&forall; c&bull; (&forall; s&bull; prem s &rArr; sem s c) &rArr; sem conc c))
               &and; ds ((&lambda; s&bull; F), sen)&qqter;
</ft>
<ft lang="xl-sml" rest="">
a (&exist;_tac &qqtel;&lambda;(ss, s)&bull; s = sen&qqter; THEN rewrite_tac[]);
</ft>
<ft lang="xl-gft" rest="">
(*  1 *)  &qqtel;&forall; c&bull; sem sen c&qqter;

(* ?&turnstil; *)  &qqtel;&forall; prem conc&bull; conc = sen &rArr; (&forall; c&bull; (&forall; s&bull; prem s &rArr; sem s c) &rArr; sem conc c)&qqter;
</ft>
<ft lang="xl-sml" rest="">
a (REPEAT strip_tac THEN asm_rewrite_tac[]);
</ft>
<ft lang="xl-gft" rest="">
Current goal achieved, next goal is:

(* *** Goal "2" *** *)

(*  2 *)  &qqtel;&forall; prem conc&bull; ds (prem, conc) &rArr; (&forall; c&bull; (&forall; s&bull; prem s &rArr; sem s c) &rArr; sem conc c)&qqter;
(*  1 *)  &qqtel;ds ((&lambda; s&bull; F), sen)&qqter;

(* ?&turnstil; *)  &qqtel;sem sen c&qqter;
</ft>
<ft lang="xl-sml" rest="">
a (list_spec_nth_asm_tac 2 [&qqtel;(&lambda; s&bull; F)&qqter;, &qqtel;sen&qqter;]);
</ft>
<ft lang="xl-gft" rest="">
(*  3 *)  &qqtel;&forall; prem conc&bull; ds (prem, conc) &rArr; (&forall; c&bull; (&forall; s&bull; prem s &rArr; sem s c) &rArr; sem conc c)&qqter;
(*  2 *)  &qqtel;ds ((&lambda; s&bull; F), sen)&qqter;
(*  1 *)  &qqtel;&forall; c&bull; (&forall; s&bull; (&lambda; s&bull; F) s &rArr; sem s c) &rArr; sem sen c&qqter;

(* ?&turnstil; *)  &qqtel;sem sen c&qqter;
</ft>
<ft lang="xl-sml" rest="">
a (spec_nth_asm_tac 1 &qqtel;c&qqter;);
</ft>
<ft lang="xl-gft" rest="">
(*  5 *)  &qqtel;&forall; prem conc&bull; ds (prem, conc) &rArr; (&forall; c&bull; (&forall; s&bull; prem s &rArr; sem s c) &rArr; sem conc c)&qqter;
(*  4 *)  &qqtel;ds ((&lambda; s&bull; F), sen)&qqter;
(*  3 *)  &qqtel;&forall; c&bull; (&forall; s&bull; (&lambda; s&bull; F) s &rArr; sem s c) &rArr; sem sen c&qqter;
(*  2 *)  &qqtel;(&lambda; s&bull; F) s&qqter;
(*  1 *)  &qqtel;&not; sem s c&qqter;

(* ?&turnstil; *)  &qqtel;sem sen c&qqter;
</ft>
<ft lang="xl-sml" rest="">
a (all_asm_ante_tac THEN rewrite_tac[]);
</ft>
<ft lang="xl-gft" rest="">
Current and main goal achieved
</ft>
<ft lang="xl-sml" rest="">
save_pop_thm "Theorem1";
</ft>
</subsec>
</sbcol>
</secbody>
</section>

<section title="Model 3" tag="3">
<abstract>
The treatment of the deductive system is refined by modelling a deductive system as an immediate derivability relation.
</abstract>
<secbody>
<sbcol>
<subsec title="The Theory x003v">
The new theory is first created.
<ft lang="xl-sml" rest="">
open_theory "hol";
force_new_theory "x003v";
set_pc "hol";
</ft>
</subsec>
<subsec title="Language and Semantics">
<p>
This is unchanged from model 2.
</p>
</subsec>
<subsec title="Analytic">
<p>
Unchanged.
</p>
<holconst><holsig>
&tvb;	analytic : 's &cross; ('s &rarr; 'c &rarr; BOOL) &rarr; BOOL
</holsig>
<holpred>
&tvb;	&forall;sen sem&bull; analytic (sen, sem) &equiv; &forall;c&bull; sem sen c
</holpred>
</holconst>
</subsec>
<subsec title="Sound Deductive System">
<p>
The definition of soundness remains formally unchanged, but the deductive system is now to be understood as an immediate derivability relation.
</p>
<holconst><holsig>
&tvb;	sound : (('s &rarr;  BOOL) &cross; 's &rarr;  BOOL)
&tvb;		&cross; ('s &rarr; 'c &rarr;  BOOL)
&tvb;		&rarr;  BOOL
</holsig>
<holpred>
&tvb;	&forall;ds sem&bull;
&tvb;	  sound (ds, sem) &equiv;
&tvb;		&forall;prem conc&bull;
&tvb;			ds (prem, conc)
&tvb;	  		&rArr; &forall;c&bull; ((&forall;s&bull; prem s &rArr; sem s c) &rArr; sem conc c)
</holpred>
</holconst>
</subsec>
<subsec title="Derivation">
<p>
We now define a function which lifts an immediate derivability relation to a derivability relation.
</p>
<p>
The following defines the property of properties of sets of sentences of being closed under an immediate inference relation.
</p>
<holconst><holsig>
&tvb;	iiclosed : (('s &rarr;  BOOL) &cross; 's &rarr;  BOOL)
&tvb;		&rarr; ('s &rarr;  BOOL) &rarr; BOOL
</holsig>
<holpred>
&tvb;	&forall;ds ss&bull;
&tvb;	  iiclosed ds ss &equiv;
&tvb;		&forall;prems conc&bull;
&tvb;			ds (prems, conc) &and; (&forall;s&bull; prems s &rArr; ss s)
&tvb;			&rArr; ss conc
</holpred>
</holconst>
<p>
The closure of a relation of immediate inference is now defined, i.e. the corresponding notion of derived inference.
</p>
<holconst><holsig>
&tvb;	close_ds : (('s &rarr;  BOOL) &cross; 's &rarr;  BOOL)
&tvb;		&rarr; (('s &rarr;  BOOL) &cross; 's &rarr;  BOOL)
</holsig>
<holpred>
&tvb;	&forall;ds prems conc&bull;
&tvb;	  close_ds ds (prems, conc) &equiv;
&tvb;	 	&forall;css&bull; iiclosed ds css &and; (&forall;t&bull; prems t &rArr; css t) &rArr; css conc
</holpred>
</holconst>
</subsec>
<subsec title="Demonstrative">
<p>
<i>demonstrative</i> is a relation between sentences and semantics (that a sentence is derivable in a deductive system which is sound with respect to that semantics).
The definition now reflects that a deductive system is represented by an immediate inference relation, and that sentences are provable if they are reachable by the corresponding derived inference relation.
</p>
<holconst><holsig>
&tvb;	demonstrative : 's &cross; ('s &rarr; 'c &rarr;  BOOL)  &rarr;  BOOL
</holsig>
<holpred>
&tvb;	&forall;sen sem&bull;
&tvb;	  demonstrative (sen, sem) &equiv;
&tvb;		&exist; ds&bull; sound (ds, sem) &and; (close_ds ds) ((&lambda;s&bull;F), sen)
</holpred>
</holconst>
</subsec>

</sbcol>
</secbody>
<secbody>
<sbcol>
<subsec title="The Proof">
<p>
The proof now must effectively incorporate the demonstration that if an immediate inference relation is sound then so is the derived inference relation obtained from it.
</p>
First I proved a lemma stating that the derived inference rules are sound iff the immediate inference rules are sound, viz: 
<ft lang="xl-sml" rest="">
set_goal([], &qqtel;&forall;ds&bull; sound (ds, sem) &equiv; sound (close_ds ds, sem)&qqter;);
</ft>
But then I didn't use it in the main proof so the proof of the lemma is not listed.
<hide>
<ft lang="xl-sml" rest="">
a (rewrite_tac(map get_spec [
		&qqtel;sound&qqter;,
		&qqtel;close_ds&qqter;]));
a (REPEAT strip_tac);
a (lemma_tac &qqtel;iiclosed ds (&lambda;s&bull; sem s c)&qqter;);
a (rewrite_tac [get_spec &qqtel;iiclosed&qqter;]
	THEN REPEAT strip_tac);
a (asm_fc_tac[]);
a (asm_fc_tac[]);
(* *** Goal "1.2" *** *)
a (SPEC_NTH_ASM_T 3 &qqtel;&lambda;s&bull; sem s c&qqter; ante_tac
	THEN rewrite_tac[]);
a (asm_rewrite_tac[]);
(* *** Goal "2" *** *)
a (list_spec_nth_asm_tac 3 [&qqtel;prem&qqter;, &qqtel;conc&qqter;]);
(* *** Goal "2.1" *** *)
a (DROP_NTH_ASM_T 3 ante_tac);
a (asm_rewrite_tac[get_spec &qqtel;iiclosed&qqter;]
	THEN REPEAT strip_tac);
a (all_asm_fc_tac[]);
(* *** Goal "2.2" *** *)
a (all_asm_fc_tac[]);
val closure_soundness_lemma = save_pop_thm "closure_soundness_lemma";
</ft>
</hide>
The following is the proof that analytic and demonstrative are coextensive.
<ft lang="xl-sml" rest="">
set_goal([], &qqtel;&forall;sen sem&bull; analytic (sen, sem) &equiv; demonstrative (sen, sem)&qqter;);
a (rewrite_tac(map get_spec [
		&qqtel;analytic&qqter;,
		&qqtel;demonstrative&qqter;,
		&qqtel;sound&qqter;])
	THEN REPEAT strip_tac);
</ft>
<ft lang="xl-gft" rest="">
(* *** Goal "2" *** *)

(*  2 *)  &qqtel;&forall; prem conc&bull; ds (prem, conc) &rArr; (&forall; c&bull; (&forall; s&bull; prem s &rArr; sem s c) &rArr; sem conc c)&qqter;
(*  1 *)  &qqtel;close_ds ds ((&lambda; s&bull; F), sen)&qqter;

(* ?&turnstil; *)  &qqtel;sem sen c&qqter;

(* *** Goal "1" *** *)

(*  1 *)  &qqtel;&forall; c&bull; sem sen c&qqter;

(* ?&turnstil; *)  &qqtel;&exist; ds
           &bull; (&forall; prem conc&bull; ds (prem, conc) &rArr; (&forall; c&bull; (&forall; s&bull; prem s &rArr; sem s c) &rArr; sem conc c))
               &and; close_ds ds ((&lambda; s&bull; F), sen)&qqter;
</ft>
<ft lang="xl-sml" rest="">
(* *** Goal "1" *** *)
a (&exist;_tac &qqtel;&lambda;(ss, s)&bull; s = sen&qqter;
	THEN rewrite_tac[]
	THEN REPEAT strip_tac
	THEN_TRY asm_rewrite_tac[]);
</ft>
<ft lang="xl-gft" rest="">
(*  1 *)  &qqtel;&forall; c&bull; sem sen c&qqter;

(* ?&turnstil; *)  &qqtel;close_ds (&lambda; (ss, s)&bull; s = sen) ((&lambda; s&bull; F), sen)&qqter;
</ft>
<ft lang="xl-sml" rest="">
a (asm_rewrite_tac[get_spec &qqtel;close_ds&qqter;,
	get_spec &qqtel;iiclosed&qqter;]
	THEN REPEAT strip_tac);
</ft>
<ft lang="xl-gft" rest="">
(*  2 *)  &qqtel;&forall; c&bull; sem sen c&qqter;
(*  1 *)  &qqtel;&forall; prems conc&bull; conc = sen &and; (&forall; s&bull; prems s &rArr; css s) &rArr; css conc&qqter;
</ft>
<ft lang="xl-sml" rest="">
a (LIST_SPEC_NTH_ASM_T 1 [&qqtel;(&lambda; s&bull; F)&qqter;, &qqtel;sen&qqter;] ante_tac
	THEN rewrite_tac[]);
</ft>
<ft lang="xl-gft" rest="">
Current goal achieved, next goal is:

(* *** Goal "2" *** *)

(*  2 *)  &qqtel;&forall; prem conc&bull; ds (prem, conc) &rArr; (&forall; c&bull; (&forall; s&bull; prem s &rArr; sem s c) &rArr; sem conc c)&qqter;
(*  1 *)  &qqtel;close_ds ds ((&lambda; s&bull; F), sen)&qqter;

(* ?&turnstil; *)  &qqtel;sem sen c&qqter;
</ft>
<ft lang="xl-sml" rest="">
a (POP_ASM_T ante_tac
	THEN rewrite_tac [
		get_spec &qqtel;close_ds&qqter;,
		get_spec &qqtel;iiclosed&qqter;]
	THEN REPEAT strip_tac);
</ft>
<ft lang="xl-gft" rest="">
(*  2 *)  &qqtel;&forall; prem conc&bull; ds (prem, conc) &rArr; (&forall; c&bull; (&forall; s&bull; prem s &rArr; sem s c) &rArr; sem conc c)&qqter;
(*  1 *)  &qqtel;&forall; css
           &bull; (&forall; prems conc&bull; ds (prems, conc) &and; (&forall; s&bull; prems s &rArr; css s) &rArr; css conc) &rArr; css sen&qqter;

(* ?&turnstil; *)  &qqtel;sem sen c&qqter;
</ft>
<ft lang="xl-sml" rest="">
a (SPEC_NTH_ASM_T 1 &qqtel;&lambda; s&bull; sem s c&qqter; ante_tac
	THEN rewrite_tac[]
	THEN REPEAT strip_tac
	THEN all_asm_fc_tac[]);
</ft>
<ft lang="xl-gft" rest="">
Tactic produced 0 subgoals:
Current and main goal achieved
</ft>
<ft lang="xl-sml" rest="">
val Theorem1 = save_pop_thm "Theorem1";
</ft>
</subsec>
</sbcol>
</secbody>
</section>

</xldoc>
