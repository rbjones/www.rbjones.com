The hard core of this talk is a system of marking results obtained
by deduction intended to indicate a level of assurance or authority
on which the conclusions have been obtained, and hence providing a
kind of calclulus of trust.

Around this core there will be a general discussion of trust from
various perspectives relevant to interactive theorem proving.

The system is intended to operate in an open, linguistically pluralistic
context, in which an agent conducts a proof in a context and using results
which have been established previously, possibly by some other agent,
possibly as a result of contributions from many.
In this context each agent has a unique identifier and an associated RSA
key pair, which he uses to sign any results which he obtains.
In this systems, results (which we call propositions without prejuduce as
to their character), are recorded as conditional upon the partial infallibility
of as assurace level which encapusulates the status of the sources from which
the result was derived.

Assurance levels form a distributive lattice finitely generated from the
identifiers of all the agents in the system, from which a quotient is
determined by signed endorsements, in which some agents endorse the opinions
of other agents or of a complex assurance level.  These endorsements
may be used in certification system for agents by assigning a label for each
level of certification and then endorsing those agents which pass the criteria
for that level of certification.

Generally agents will be interactive or automatic proof tools, or decision
procedures, but the system is intended to admit a liberalisation the notion
of deduction to encompass all sound inference or correct computation.
Proof technologies already stretch the traditional idea of a formal proof
to breaking point, so in this system the trust measures relate to the truth
of propositions, and "proof" is viewed as just one way of establishing a
proposition.  A correctly coded decision procedure may involve nothing which
would ordinarily be considered a formal proof, and yet be no less authoritative
for that.  Likewise, the results of any correct computation can be captured
in a proposition (expressing that the result of the computation complies with
the specification) which may be know with very high assurace even though no
formal proof is involved.  That such a program has not been formally verified
is no bar to its use in this manner, though this will diminsh the level of
trust with which its results are admitted.






