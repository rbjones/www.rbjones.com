#####################################################################
#
#	$Id: rbj.mkf,v 1.80 2010/09/11 20:29:09 rbj Exp $
#
#	makefile for Roger's things
#
# This is an adaptation of Rob Arthan's maths_egs.mkf to work in my
# setup for those things I am now trying to do with ProofPower in
# his manner (rather than, say, in XML).
######################################################################

# suffixes known
.SUFFIXES: .db .doc .pdf .ldd .log .lot .sh .doc .tex .tch

# default make target.  displays a list of more useful targets

default:
	@echo "This is the make file for an assortment of experiments"
	@echo "with ProofPower, mostly philosophically motivated."
	@echo " "
	@echo "ProofPower version 2.7.3 or later is required."
	@echo "In addition we assume the existence of the database"
	@echo "maths_egs built from Rob Arthan's mathematics examples."
	@echo " "
	@echo "The following are useful for developers:"
	@echo " "
	@echo "make -f rbj.mkf doc      - makes a .pdf tar file (rbj.doc.tgz)"
	@echo "make -f rbj.mkf dist     - makes a source tar file (rbj.src.tgz)"
	@echo " "
	@echo "The following are the two most useful make commands for users:"
	@echo " "
	@echo "make -f rbj.mkf pdf      - build database; typeset documents as PDF files"
	@echo "make -f rbj.mkf bld      - just build database"
	@echo " "
	@echo "The make commands that build the database create a new ProofPower database"
	@echo "called rbjhol and load the documents into it, thus typechecking the"
	@echo "specifications and replaying the proofs."
#	@echo "You will need "." in your path to make pdf or doc."

vars:
	echo $(HOLTEXS1)

######################################################################
#
#	Makefile Definitions
#
######################################################################

PPHOME=$(shell echo $${PPHOME:-/usr/local/pp})
PRODNAME=rbj
SHORTNAME=rbj
PRODUCT=$(PRODNAME)
CWD=$(shell pwd)
HAVERCS=$(shell (test -d RCS && echo y ) || echo n)

HOLDBNAME=rbjhol
ZEDDBNAME=rbjzed
STARTHOLDBNAME=maths_egs
STARTZEDDBNAME=zed

RELDIR=release

# The documents
HOLDOCS1= t000.doc \
	t002.doc t003.doc t004.doc t005.doc t006.doc t007.doc \
	t008.doc t009.doc t010.doc t011.doc t012.doc t013.doc t014.doc \
	t015.doc t016.doc t017.doc t018.doc t019.doc t020.doc t021.doc \
	t022.doc t023.doc t024.doc t025.doc t026.doc t027.doc t031.doc \
	t033.doc

HOLDOCS2= t001.doc t028.doc t029.doc t030.doc t032.doc t037.doc t038.doc t039.doc t040.doc t041.doc

HOLDOCS=$(HOLDOCS1) $(HOLDOCS2)

HOLTEXS1=$(HOLDOCS1:.doc=.tex)
HOLTEXS2=$(HOLDOCS2:.doc=.tex)

TTEX= \
        t001a.tex t002.tex t003.tex t004.tex t005.tex t006.tex t007.tex \
	t008.tex t009.tex t010.tex t011.tex t012.tex t013.tex t014.tex \
	t015.tex t016.tex t017.tex t018.tex t019.tex t020.tex t021.tex \
	t022.tex t023.tex t024.tex t025.tex t026.tex t027.tex t028a.tex \
	t029a.tex t030a.tex t031.tex t032a.tex t033.tex t037a.tex t038a.tex \
	t039a.tex t040a.tex t041a.tex

ATEXS=$(HOLDOCS2:.doc=a.tex)
ZTEXS=$(HOLDOCS2:.doc=z.tex)

ZEDDOCS=

SMLDOCS=$(HOLDOCS) $(ZEDDOCS)

OTHERDOCS=

HOLLDD=$(HOLDOCS:.doc=.ldd)
ZEDLDD=$(ZEDDOCS:.doc=.ldd)

# Variations on the documents
SMLFILES= $(SMLDOCS:.doc=.sml)
LDDFILES= $(SMLDOCS:.doc=.ldd)
PDFFILES1= $(HOLDOCS1:.doc=.pdf) $(OTHERDOCS:.doc=.pdf)
PDFFILES2= $(HOLDOCS2:.doc=.pdf)
PDFFILES=$(PDFFILES1) $(PDFFILES2)

# packing list for a source release (target src)
PACKINGLIST= $(SMLDOCS) $(ATEXS) $(ZTEXS) $(OTHERDOCS) rbj.bib rbj.mkf rbj.sty \
	     rbjfmu.bst rbjpp.ist ProofPower.sty docpdf texpdf texindex2tex LICENSE 
# t000abs

DISTPACKINGLIST=$(PACKINGLIST) README.txt

######################################################################
#
# Dependencies - determining the order of compilation
#
######################################################################

t038.ldd:
t010.ldd: $(HOLDBNAME).ldd
t011.ldd: $(HOLDBNAME).ldd
t006.ldd: t010.ldd
t012.ldd: t011.ldd
t003.ldd: t006.ldd
t005.ldd: t006.ldd
t009.ldd: t006.ldd
t016.ldd: t006.ldd
t039.ldd: t006.ldd
t029.ldd: t006.ldd
t037.ldd: t006.ldd
t002.ldd: t003.ldd
t004.ldd: t009.ldd
t019.ldd: t004.ldd
t040.ldd: t039.ldd
t017.ldd: t004.ldd t006.ldd t039.ldd
t023.ldd: t005.ldd t006.ldd t009.ldd
t021.ldd: t005.ldd t009.ldd t023.ldd
t007.ldd: t006.ldd t009.ldd t023.ldd
t008.ldd: t004.ldd t007.ldd
t018.ldd: t007.ldd t019.ldd
t025.ldd: t007.ldd t023.ldd
t024.ldd: t004.ldd t025.ldd
t001.ldd: t006.ldd t025.ldd
t022.ldd: t007.ldd t009.ldd t023.ldd
t020.ldd: t004.ldd t007.ldd t022.ldd
t026.ldd: t004.ldd t005.ldd t025.ldd
t027.ldd: t004.ldd t005.ldd t025.ldd
t028.ldd: t025.ldd
t030.ldd: t025.ldd
t031.ldd: t025.ldd
t032.ldd: t025.ldd
t033.ldd: t025.ldd
t041.ldd: t004.ldd t005.ldd t025.ldd

# some variables and rules concerning document preparation

$(PDFFILES): rbj.bib rbjfmu.bst rbjpp.ist ProofPower.sty rbj.sty docpdf texpdf

README.txt:

HTHS= ariscat.th gccon.th \
      ba.th BRT.th bvi.th cat.th catfun.th CC.th cfpi.th circuit.th diffgeom.th \
      equiv.th fixp.th fixp-egs.th fmphil.th \
      grice.th griceC.th griceS.th GS.th GST.th gst-ax.th gst-fun.th gst-nat.th gst-ord.th \
      holw.th ICsyn.th ICsem.th ifol.th ifos.th infos.th lambda.th lattice.th leibniz01.th leibniz02.th \
      membership.th memfunct.th metaci.th metapi.th misc2.th modsyllog.th \
      nf_h.th nfu_s.th nfu_f.th ordered_sets.th poly-sets.th pre_func.th \
      rbjmisc.th sfp.th sr.th sra.th src.th syllog1.th syllog2.th syllmetap.th \
      t001a.th t001b.th t002a.th tc.th tract01.th U_orders.th unalg.th \
      wfrel.th wf_relp.th wf_recp.th \
      X-Logic-Auth.th X-Logic-1.th X-Logic-2.th

# The Theory Hierarchy (not complete)
#t005:wfrel
#t023:wf_relp wf_recp gst-ax gst-fun gst-nat GS gst-ord
#           t016:X-Logic-1 X-Logic-2
#                              t017:cat  t007:fixp  t019:nf_h nfu_s nfu_f
#                                           t018:pre_func.th.tex catfun.th.tex metapi.th.tex
#                                                cfpi.th.tex metaci.th.tex
#
#            t022:sra src sr
#            t020:poly-sets
#t021:

ZTHS=
THEORIES=$(HTHS) $(ZTHS)

HTHDOCS=$(HTHS:.th=.th.doc)
ZTHDOCS=$(ZTHS:.th=.th.doc)

THDOCS=$(HTHDOCS) $(ZTHDOCS)
THTEXS=$(THEORIES:.th=.th.tex)

$(THTEXS): %.tex: %.doc
	   doctex $*
	   @sed -i -e "/THE THEORY/s/THE THEORY/The Theory/" $*.tex
	   @sed -i -e "/underscoreoff/s/\([^_\]\)_/\1\\\\_/g" $*.tex
#	   @sed -i -e "/\\+\t/s/\t/       /g" $*.tex

######################################################################
#
# Dependencies - describing which documents depend on which theory listings
#
######################################################################

t001a.th.doc t001b.th.doc: t001.ldd

t002a.th.doc: t002.ldd

diffgeom.th.doc: t003.ldd

ba.th.doc bvi.th membership.th.doc memfunct.th.doc: t004.ldd

tc.th.doc wfrel.th.doc wf_relp.th.doc wf_recp.th.doc: t005.ldd

rbjmisc.th.doc: t006.ldd

fixp.th.doc: t007.ldd

fixp-egs.th.doc: t008.ldd

ordered_sets.th.doc U_orders.th.doc: t009.ldd

X-Logic-Auth.th.doc X-Logic-1.th.doc X-Logic-2.th.doc: t016.ldd 

cat.th.doc: t017.ldd

catfun.th.doc cfpi.th.doc metaci.th.doc metapi.th.doc pre_func.th.doc: t018.ldd 

t000.pdf: t000abs.tex

t001.pdf: t001a.th.tex t001b.th.tex

t002.pdf: t002a.th.tex

t003.pdf: diffgeom.th.tex

t004.pdf: ba.th.tex bvi.th.tex membership.th.tex memfunct.th.tex

t005.pdf: tc.th.tex wfrel.th.tex wf_relp.th.tex wf_recp.th.tex

t006.pdf: rbjmisc.th.tex

t007.pdf: fixp.th.tex

t008.pdf: fixp-egs.th.tex

t009.pdf: ordered_sets.th.tex U_orders.th.tex

t016.pdf: X-Logic-Auth.th.tex X-Logic-1.th.tex X-Logic-2.th.tex

t017.pdf: cat.th.tex

t018.pdf: pre_func.th.tex catfun.th.tex metapi.th.tex cfpi.th.tex metaci.th.tex

nf_h.th.doc nfu_f.th.doc nfu_s.th.doc: t019.ldd

t019.pdf: nf_h.th.tex nfu_s.th.tex nfu_f.th.tex

poly-sets.th.doc: t020.ldd

t020.pdf: poly-sets.th.tex

ICsyn.th.doc ICsem.th.doc: t021.ldd

t021.pdf: ICsyn.th.tex ICsem.th.tex

GST.th.doc sra.th.doc src.th.doc sr.th.doc: t022.ldd

t022.pdf: GST.th.tex sra.th.tex src.th.tex sr.th.tex

gst-ax.th.doc gst-fun.th.doc gst-nat.th.doc GS.th.doc gst-ord.th.doc: t023.ldd

t023.pdf: gst-ax.th.tex gst-fun.th.tex gst-nat.th.tex GS.th.tex gst-ord.th.tex

ifol.th.doc: t024.ldd

t024.pdf: ifol.th.tex

misc2.th.doc: t025.ldd

t025.pdf: misc2.th.tex

ifos.th.doc sfp.th.doc: t026.ldd 

t026.pdf: ifos.th.tex sfp.th.tex

infos.th.doc: t027.ldd 

t027.pdf: infos.th.tex

ariscat.th.doc modsyllog.th.doc syllog1.th.doc syllog2.th.doc syllmetap.th.doc gccon.th.doc: t028.ldd

t028.pdf: ariscat.th.tex modsyllog.th.tex syllog1.th.tex syllog2.th.tex syllmetap.th.tex gccon.th.tex

fmphil.th.doc: t029.ldd

t029.pdf: fmphil.th.tex

tract01.th.doc: t030.ldd

t030.pdf: tract01.th.tex

holw.th.doc: t031.ldd

t031.pdf: holw.th.tex

leibniz01.th.doc leibniz02.th.doc: t032.ldd

t032.pdf: leibniz01.th.tex leibniz02.th.tex

BRT.th.doc CC.th.doc: t033.ldd

t033.pdf: BRT.th.tex CC.th.tex

grice.th.doc griceC.th.doc griceS.th.doc: t037.ldd

t037.pdf: grice.th.tex griceC.th.tex griceS.th.tex

t038.pdf: t038.ldd

equiv.th.doc unalg.th.doc lattice.th.doc: t039.ldd

t039.pdf: t039.ldd equiv.th.tex unalg.th.tex lattice.th.tex

circuit.th.doc: t040.ldd

t040.pdf: t009.ldd circuit.th.tex

lambda.th.doc: t041.ldd

t041.pdf: lambda.th.tex

######################################################################
#
#	Building the database
#
######################################################################

bld: t002.ldd t003.ldd t004.ldd t005.ldd t006.ldd t007.ldd t008.ldd t009.ldd \
	t010.ldd t016.ldd t018.ldd t019.doc t020.ldd t021.ldd t022.ldd t023.ldd \
	t025.ldd t026.ldd t027.ldd t028.ldd t029.ldd t032.ldd t033.ldd t037.ldd \
	t038.ldd t039.ldd t040.ldd t041.ldd

$(HOLDBNAME).ldd:
	pp_make_database -f -p $(STARTHOLDBNAME) $(HOLDBNAME)
	touch $(HOLDBNAME).ldd

$(ZEDDBNAME).ldd:
	pp_make_database -f -p $(STARTZEDDBNAME) $(ZEDDBNAME)
	touch $(ZEDDBNAME).ldd

# useful target to print out the names of all the files in the source $(RELDIR)

packinglist:
	@echo $(PACKINGLIST)

######################################################################
#
#	Building the documents
#
######################################################################

t000abs.tex: $(TTEX)
	./texindex2tex $(TTEX) > t000abs.tex

doc_theories.tex: $(THTEXS)
		  cat $(THTEXS) >| doc_theories.tex

pdf: $(PDFFILES)

######################################################################
#
#	Constructing source release directories
#
######################################################################

reldir:
	if [ "$${PPTARGETDIR:-}" = "" ]; \
	then \
		rm -rf $(RELDIR); \
	fi
	[ -d   $(RELDIR) ] || mkdir $(RELDIR)
	

srcdir:	reldir
	[ -d   $(RELDIR)/src ] || mkdir $(RELDIR)/src

docdir:	reldir
	[ -d   $(RELDIR)/doc ] || mkdir $(RELDIR)/doc


rcsrel:	srcdir
	[ -d   $(RELDIR)/src/RCS ] || mkdir $(RELDIR)/src/RCS
	@for f in $(PACKINGLIST); \
	do \
		cp RCS/$$f,v $(RELDIR)/src/RCS/$$f,v; \
	done
	chmod -R a-w $(RELDIR)
	chmod -R g-w $(RELDIR)
	chmod -R u+w $(RELDIR)

rcs:	rcsrel
	cd $(RELDIR) && tar cvf $(CWD)/$(PRODUCT).rcs.tar ./*
	cd $(CWD) && gzip $(PRODUCT).rcs.tar && \
	mv $(PRODUCT).rcs.tar.gz $(PRODUCT).rcs.tgz

srcrel: srcdir $(DISTPACKINGLIST)
	@for f in $(DISTPACKINGLIST); \
	do \
		cp $$f $(RELDIR)/src/$$f; \
	done
	chmod -R a-w $(RELDIR)
	chmod -R g-w $(RELDIR)
	chmod -R u+w $(RELDIR)

docrel: docdir $(PDFFILES)
	@for f in $(PDFFILES); \
	do \
		cp $$f $(RELDIR)/doc/$$f; \
	done
	chmod -R a-w $(RELDIR)
	chmod -R g-w $(RELDIR)
	chmod -R u+w $(RELDIR)

src:	srcrel
	cd $(RELDIR) && tar cvfz $(CWD)/$(PRODUCT).src.tgz ./*
	cd $(CWD)

dist:	src

doc:	docrel
	cd $(RELDIR) && tar cvfz $(CWD)/$(PRODUCT).pdf.tgz ./*
	cd $(CWD)

######################################################################
#
#	Tidying Up
#
######################################################################

clean:
	rcsclean
	rm -f $(SMLFILES) $(LDDFILES)
	rm -f *.aux *.bbl *.blg *.idx *.log *.lot *.sid *.sml *.tex *.toc $(HOLDBNAME).ldd *.th.doc

######################################################################
#
#	Generic Rules
#
######################################################################

$(HOLLDD): %.ldd: %.sml
	@rm -f $@ $*.err 2>/dev/null
	@echo "Compiling (code)" $<
	@pp -d $(HOLDBNAME) -f $< >$*.err
	@mv $*.err $@

$(ZEDLDD): %.ldd: %.sml
	@rm -f $@ $*.err 2>/dev/null
	@echo "Compiling (code)" $<
	@pp -d $(ZEDDBNAME) -f $< >$*.err
	@mv $*.err $@

$(HTHDOCS): %.th.doc:
	@rm -f $@ $*.err 2>/dev/null
	@echo "Listing hol theory: " $*
	@hol_list -d $(HOLDBNAME) $* >$*.err
	@mv $*.err $@

$(ZTHDOCS): %.th.doc:
	@rm -f $@ $*.err 2>/dev/null
	@echo "Listing zed theory: " $*
	@zed_list -d $(HOLDBNAME) $* >$*.err
	@mv $*.err $@

%.sml: %.doc
	docsml $*

$(HOLTEXS1): %.tex: %.doc
	doctex $*

$(HOLTEXS2): %.tex: %a.tex %.doc %z.tex
	doctex $*
	mv $*.tex $*m.tex
	cat $*a.tex $*m.tex $*z.tex > $*.tex

%.dvi: %.tex
	TEXINPUTS=.:$(PPHOME)/tex: \
	BSTINPUTS=.:$(PPHOME)/tex: \
	BIBINPUTS=.:$(PPHOME)/tex: docdvi $*

$(PDFFILES1): %.pdf: %.doc
	TEXINPUTS=.:$(PPHOME)/tex: \
	BSTINPUTS=.:$(PPHOME)/tex: \
	BIBINPUTS=.:$(PPHOME)/tex: \
	PATH=.:$(PATH) docpdf $*

$(PDFFILES2): %.pdf: %.tex
	TEXINPUTS=.:$(PPHOME)/tex: \
	BSTINPUTS=.:$(PPHOME)/tex: \
	BIBINPUTS=.:$(PPHOME)/tex: \
	PATH=.:$(PATH) texpdf $*
	TEXINPUTS=.:$(PPHOME)/tex: \
	BSTINPUTS=.:$(PPHOME)/tex: \
	BIBINPUTS=.:$(PPHOME)/tex: bibtex $*
	TEXINPUTS=.:$(PPHOME)/tex: \
	BSTINPUTS=.:$(PPHOME)/tex: \
	BIBINPUTS=.:$(PPHOME)/tex: \
	PATH=.:$(PATH) texpdf $*

#%.pdf: %.dvi
#	dvipdf -sPAPERSIZE=a4 $*
