######################################################################
#
#	$Id: rbj.mkf,v 1.3 2004/10/03 19:42:39 rbj Exp $
#
#	makefile for Roger's things
#
# This is an adaptation of Rob Arthan's maths_egs.mkf to work in my
# setup for those things I am now trying to do with ProofPower in
# his manner (rather than, say, in XML).
######################################################################

# suffixes known
.SUFFIXES: .db .doc .dvi .ldd .log .lot .sh .doc .tex .tch

# default make target.  displays a list of more useful targets

default:
	@echo "This is the make file for an assortment of experiments"
	@echo "with ProofPower, mostly philosophically motivated."
	@echo " "
	@echo "ProofPower version 2.7.3 or later is required."
	@echo "In addition we assume the existence of the database"
	@echo "maths_egs built from Rob Arthan's mathematics examples."
	@echo " "
	@echo "The following are useful for developers:"
	@echo " "
	@echo "make -f rbj.mkf doc      - makes a .dvi tar file (rbj.doc.tgz)"
	@echo "make -f rbj.mkf dist     - makes a source tar file (rbj.src.tgz)"
	@echo " "
	@echo "The following are the three most useful make commands for users:"
	@echo " "
	@echo "make -f rbj.mkf dvi      - build database; typeset documents as DVI files"
	@echo "make -f rbj.mkf pdf      - build database; typeset documents as PDF files"
	@echo "make -f rbj.mkf bld      - just build database"
	@echo " "
	@echo "The make commands that build the database create a new ProofPower database"
	@echo "called rbj and load the documents into it, thus typechecking the"
	@echo "specifications and replaying the proofs."
	@echo " "
	@echo "If your ProofPower system is not installed in /usr/local/pp, use for example:"
	@echo " "
	@echo "    PPHOME=/opt/pp make -f rbj.mkf dvi"
	@echo " "

######################################################################
#
#	Makefile Definitions
#
######################################################################

PPHOME=$(shell echo $${PPHOME:-/usr/local/pp})
PRODNAME=rbj
SHORTNAME=rbj
PRODUCT=$(PRODNAME)
CWD=$(shell pwd)
HAVERCS=$(shell (test -d RCS && echo y ) || echo n)

DBNAME=rbj
STARTDBNAME=maths_egs

RELDIR=release

# The documents
SMLDOCS= t001.doc t002.doc t003.doc t004.doc t005.doc t006.doc t007.doc \
	t008.doc t009.doc t010.doc t011.doc t012.doc
OTHERDOCS= t000.doc

LDD=$(SMLDOCS:.doc=.ldd)

# Variations on the documents
SMLFILES= $(SMLDOCS:.doc=.sml)
LDDFILES= $(SMLDOCS:.doc=.ldd)
DVIFILES= $(SMLDOCS:.doc=.dvi) $(OTHERDOCS:.doc=.dvi)
PDFFILES= $(DVIFILES:.dvi=.pdf) 

# packing list for a source release (target src)
PACKINGLIST= $(SMLDOCS) $(OTHERDOCS) rbj.bib rbj.mkf

DISTPACKINGLIST=$(PACKINGLIST) README.txt

######################################################################
#
# Dependencies - determining the order of compilation
#
######################################################################
t001.ldd: t006.ldd
t002.ldd: t003.ldd
t003.ldd: t006.ldd
t004.ldd: t009.ldd
t005.ldd: t006.ldd
t006.ldd: t010.ldd
t007.ldd: t006.ldd
t008.ldd: t007.ldd
t009.ldd: t006.ldd
t010.ldd: rbjdb.ldd
t011.ldd: rbjdb.ldd
t012.ldd: rbjdb.ldd
$(DVIFILES): rbj.bib
README.txt:

######################################################################
#
# Dependencies - describing which documents depend on which theory listings
#
######################################################################

THEORIES= t001a.th t002a.th rbjmisc.th diffgeom.th membership.th wfrel.th fixp.th \
	fixp_egs.th ordered_sets.th U_orders.th
THDOCS=$(THEORIES:.th=.th.doc)
THTEXS=$(THEORIES:.th=.th.tex)

t001a.th.doc: t001.ldd

t002a.th.doc: t002.ldd

diffgeom.th.doc: t003.ldd

membership.th.doc: t004.ldd

wfrel.th.doc: t005.ldd

rbjmisc.th.doc: t006.ldd

fixp.th.doc: t007.ldd

fixp.th.tex: fixp.th.doc

fixp_egs.th.doc: t008.ldd

fixp_egs.th.tex: fixp_egs.th.doc

ordered_sets.th.doc U_orders.th.doc: t009.ldd

ordered_sets.th.tex: ordered_sets.th.doc

U_orders.th.tex: U_orders.th.doc

t001.dvi: t001a.th.tex

t002.dvi: t002a.th.tex

t003.dvi: diffgeom.th.tex

t004.dvi: membership.th.tex

t005.dvi: wfrel.th.tex

t006.dvi: rbjmisc.th.tex

t007.dvi: fixp.th.tex

t008.dvi: fixp_egs.th.tex

t009.dvi: ordered_sets.th.tex U_orders.th.tex

######################################################################
#
#	Building the database
#
######################################################################

bld: t002.ldd t003.ldd t004.ldd t005.ldd t006.ldd t007.ldd t008.ldd t009.ldd \
	t010.ldd t012.ldd

rbjdb.ldd:
	pp_make_database -f -p $(STARTDBNAME) $(DBNAME)
	touch rbjdb.ldd

# useful target to print out the names of all the files in the source $(RELDIR)

packinglist:
	@echo $(PACKINGLIST)

######################################################################
#
#	Building the documents
#
######################################################################

dvi: $(DVIFILES)

pdf: $(PDFFILES)

######################################################################
#
#	Constructing source release directories
#
######################################################################

reldir:
	if [ "$${PPTARGETDIR:-}" = "" ]; \
	then \
		rm -rf $(RELDIR); \
	fi
	[ -d   $(RELDIR) ] || mkdir $(RELDIR)
	

srcdir:	reldir
	[ -d   $(RELDIR)/src ] || mkdir $(RELDIR)/src

docdir:	reldir
	[ -d   $(RELDIR)/doc ] || mkdir $(RELDIR)/doc


rcsrel:	srcdir
	[ -d   $(RELDIR)/src/RCS ] || mkdir $(RELDIR)/src/RCS
	@for f in $(PACKINGLIST); \
	do \
		cp RCS/$$f,v $(RELDIR)/src/RCS/$$f,v; \
	done
	chmod -R a-w $(RELDIR)
	chmod -R g-w $(RELDIR)
	chmod -R u+w $(RELDIR)

rcs:	rcsrel
	cd $(RELDIR) && tar cvf $(CWD)/$(PRODUCT).rcs.tar ./*
	cd $(CWD) && gzip $(PRODUCT).rcs.tar && \
	mv $(PRODUCT).rcs.tar.gz $(PRODUCT).rcs.tgz

srcrel: srcdir $(DISTPACKINGLIST)
	@for f in $(DISTPACKINGLIST); \
	do \
		cp $$f $(RELDIR)/src/$$f; \
	done
	chmod -R a-w $(RELDIR)
	chmod -R g-w $(RELDIR)
	chmod -R u+w $(RELDIR)

docrel: docdir $(DVIFILES)
	@for f in $(DVIFILES); \
	do \
		cp $$f $(RELDIR)/doc/$$f; \
	done
	chmod -R a-w $(RELDIR)
	chmod -R g-w $(RELDIR)
	chmod -R u+w $(RELDIR)

src:	srcrel
	cd $(RELDIR) && tar cvfz $(CWD)/$(PRODUCT).src.tar ./*
	cd $(CWD)

dist:	src

doc:	docrel
	cd $(RELDIR) && tar cvfz $(CWD)/$(PRODUCT).dvi.tgz ./*
	cd $(CWD)

######################################################################
#
#	Tidying Up
#
######################################################################

clean:
	rcsclean
	rm -f $(SMLFILES) $(LDDFILES)
	rm -f *.aux *.bbl *.blg *.idx *.log *.lot *.sid *.sml *.tex *.toc rbjdb.ldd *.th.doc

######################################################################
#
#	Generic Rules
#
######################################################################

$(LDD): %.ldd: %.sml
	@rm -f $@ $*.err 2>/dev/null
	@echo "Compiling (code)" $<
	@pp -d $(DBNAME) -f $< >$*.err
	@mv $*.err $@

%.sml: %.doc
	docsml $*

%.tex: %.doc
	doctex $*

%.dvi: %.tex
	TEXINPUTS=.:$(PPHOME)/tex: \
	BSTINPUTS=.:$(PPHOME)/tex: \
	BIBINPUTS=.:$(PPHOME)/tex: docdvi $*

%.pdf: %.dvi
	dvipdf -sPAPERSIZE=a4 $*
