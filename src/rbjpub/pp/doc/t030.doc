=TEX
\def\rbjidtADAdoc{$$Id: t030.doc,v 1.6 2010/03/02 13:35:31 rbj Exp $$}

\section{Introduction}

{\it This is barely started and isn't worth reading yet!}

\subsection{Preliminary Ideas}

The following aspects of these works are those which first strike me as significant for this history.

\begin{enumerate}
\item the conceptions of analytic method
\item the conception of logical truth and of The Fork.
\item semantics
\item metaphysics
\end{enumerate}

From Russell's introductory remarks one can easily get the impression that Russell is giving a presentation of some of Wittgenstein's ideas, but it seems to me that the central concerns of the two documents are quite different.
Often the things which a philosopher thinks are important and novel about his work are not its most important features, which may be things which the philosopher has so completely assimilated into his perspective that he is unaware of them, or unaware of their significance in context.

Wittgenstein's Tractatus seems to me, in those small parts which I have so far found to be intelligible, to centre around the two ideas, firstly that propositions express truth functions of atomic propositions, and secondly that logical truths are tautologies.
Wittgenstein's treatment of this yields only a narrow conception of logical truth, easily seen to be equivalent to first order validity.
But he has in mind analyticity.
And a full conception of analyticity can be seen to fall under this same idea, the idea of something which allways evaluates to true.
Wittegenstein's treatment is defective, there are huge holes, the whole of mathematics and the examples, such as colour exclusion, of atomic propositions which are not logically independent (or at least, not analytically dependent).
 





\subsection{}

In the period immediately after the completion by Whitehead and Russell of Principia Mathematica there were attempts to draw out from this achievement some philosophical lessons.
The most conspicuous figure in this is Wittgenstein and his contribution was the Tractacus Logico-Philosophicus \cite{wittgenstein1921}.
Russell, appearing to follow in his wake (though prior to the publication of the Tractatus) gave lectures on Logical Atomism \cite{russellPLA,russell1956}.
\footnote{Two other relevant documents of a more technical nature are worth mentioning here, to get a sense of how the technical content of these philosophical works relates to that appearing in the emergent discipline of mathematical logic.
These are \cite{schonfinkelCL,wiener1914}.
These connect with specific features of the Tractatus and Logical Atomism respectively.}

\section{Preliminary Observations}

At the core of both Russell's atomism and Wittgenstein is the metaphysical idea that the world consists of a collection of facts.
\footnote{I need to find out where this idea first appeared.}

This is probably one of the ideas Russell took from Wittgenstein.
Though this features in both systems, its has a different role in each.
Wittgenstein's exploitation of this idea is more thorough and systematic than Russell's.
In Wittgenstein the fundamental insight is that propositions express truth functions of atomic propositions, and that logical truths (which Wittgenstein seems to identify with analytic propositions) are those which are tautologous (i.e. true whatever the truth values of the atomic propositions, i.e. whatever are the atomic facts).
Together with the insistence that the atomic facts are logically independent, we have a faulty account of analyticity, but a good account of the semantics of first order logic.
Without this general insistence on logical independence of atomics, we have a conception of semantics which is important and influential.

Russell builds his logical atomism around the same core, atomic facts.
But its clear firstly that the simple idea that propositions are truth functional does not inspire him, and that he has important objectives which are absent in Wittgenstein.
The pure logical semantics we find commuted in simplistic way into metaphysics by Wittgenstein tells us little or nothing about what the things are which are related by atomic propositions.       

\section{The Tractatus}

I will begin by attempting to present a formal model of (aspects of) Wittgenstein's Tractatus\cite{wittgenstein1921}.

=SML
open_theory "rbjmisc";
force_new_theory "tract01";
set_pc "rbjmisc1";
=TEX

\subsection{The World}

Wittgenstein says that a world consists of facts rather than things, that it is all the facts, that these tell us both what is the case and what is not the case, that they are ``in logical space'' and that they are logically independent.

I take this to be analogous to atomic propositions, the requirement that we know both what is and is not the case is satisfied if we have all the true atomic proposition, without any negated propositions, and this also best meets the requirement for logical independence.
We do not know here what a fact is so the information we have here is best caputured by a type constructor or a function (depending on whether we think the facts will be a type or a set).

I will assume that it will be a type (this can probably be arranged).
WIttgenstein, has implicitly alluded to possible worlds in 1.21 (though is not necessarily `ontologically committed'), and we might think of the type î('a)WORLDÆ being the type of all possibile worlds whose facts have type î'aÆ.

=SML
declare_type_abbrev("WORLD", ["'a"], î'a Æ);
=TEX

The world is then, something of type î('a)WORLDÆ, which I will refrain from introducing until we know more about what a fact is.

\subsection{States of Affairs}

A state of affairs is some combination of objects.

=SML
new_type("OBJECT", 0);
=TEX

It must therefore involve a collection of objects possibly with some information about how they are combined (allowing that the same set of objects might be combined in more that one way).

Because we later find other kinds of object which have similar structure to states of affairs, we will use the same type constructor in each case, applying the constructor to different types as appropriate.

In order to give structure to a collection we must first distinguish the elements of the collection and then supply some recipe for 

=SML
declare_type_abbrev("CONSTRUCTION", ["'a", "'b", "'c"], î('a ≠ 'b + ONE) ∏'cÆ);
=TEX

In the above definition, a {\it CONSTRUCTION}, is a type constructor of which the first type parameter is a type of indexes or tags, the the second a type of things.
This represents collections of objects which are indexed rather than an unstructured, allowing the same object to be used more than once, and allowing that an object be supplied for inclusion in the structure in some specific place.
The third type parameter is the type of the information indicating how the constuents are to be combined to form the whole.

\subsection{Thoughts and Propositions}

The things which stand for objects in propositions are names.

=SML
new_type("NAME", 0);
=TEX

\subsection{Propositions as Truth Functions - I}

Wittgenstein introduces a single truth functional connective, which is a generalised distributed denial (generalised Scheffer stroke).
\footnote{The non-generalised version was discovered by Scheffer, the generalised version was presented by Schonfinkel in his paper on combinatory logic (presented in 1920, published in 1924 \cite{schonfinkelCL}).}

This is readily defined in HOL.
We define it as an operator on sets of functions, since that allow us to use set displays as the arguments.

πHOLCONST
‹ N: (BOOL) ≠ BOOL
˜
‹ µs∑ N s § µp∑ p ç s ¥ ≥ p
∞

We can then prove that all the usual logical connectives are definable in terms of ¨NÆ.
The following theorems show that the logical constants in HOL are equivalent to expressions in N.

=GFT
N_≥_thm = Ù µ p∑ (≥ p) = N {p}
N_±_thm = Ù µ p q∑ (p ± q) = N {N {p}; N {q}}
=TEX

\ignore{
=SML
set_pc "rbjmisc1";
set_goal([],¨µp∑ ≥ p § N{p}Æ);
a (prove_tac [get_spec ¨NÆ]);
val N_≥_thm = save_pop_thm "N_≥_thm";

set_goal([],¨µp q∑ p ± q § N{N{p}; N{q}}Æ);
a (rewrite_tac [map_eq_sym_rule N_≥_thm]);;
a (prove_tac[get_spec ¨NÆ]);
val N_±_thm = save_pop_thm "N_±_thm";

set_goal([],¨µpf∑ $µ pf § N{p | ∂x∑ p = N{pf x}}Æ);
a (strip_tac);
a (once_rewrite_tac [map_eq_sym_rule (µ_elim ¨pfÆ »_axiom)]);
a (rewrite_tac [map_eq_sym_rule N_≥_thm]);;
a (rewrite_tac[get_spec ¨NÆ]);
a (REPEAT strip_tac);
a (asm_fc_tac[]);
a (spec_nth_asm_tac 1 ¨≥ pf xÆ);
a (spec_nth_asm_tac 1 ¨xÆ);
val N_µ_thm = save_pop_thm "N_µ_thm";

=IGN
set_goal([],¨µpf∑ $∂ pf § N{N{p | ∂x∑ p = N{pf x}}Æ);
=TEX
}%ignore

πHOLCONST
‹ M: ('a ≠ BOOL) ≠ BOOL
˜
‹ µf∑ M f § µx∑ ≥ f x
∞

=GFT
M_≥_thm = Ù µ p∑ (≥ p) = M (Ã x∑ p)
M_±_thm =
   Ù µ p q∑ (p ± q) = M (Ã x∑ if x then M (Ã x∑ p) else M (Ã x∑ q))
M_µ_thm = Ù µ pf∑ $µ pf = M (Ã x∑ ≥ pf x)
M_∂_thm = Ù µ pf∑ $∂ pf = M (Ã x∑ M (Ã x∑ pf x))
=TEX

\ignore{
=SML
set_pc "rbjmisc1";
set_goal([], ¨µp∑ ≥ p § M(Ãx∑p)Æ);
a (prove_tac [get_spec ¨MÆ]);
val M_≥_thm = save_pop_thm "M_≥_thm";

set_goal([],¨µp q∑ p ± q § M(Ãx∑ if x then M(Ãx∑p) else M(Ãx∑q))Æ);
a (rewrite_tac [get_spec ¨MÆ]);
a (REPEAT strip_tac);
a (spec_nth_asm_tac 1 ¨TÆ);
a (spec_nth_asm_tac 1 ¨FÆ);
val M_±_thm = save_pop_thm "M_±_thm";

set_goal([],¨µpf∑ $µ pf § M(Ãx∑ ≥ pf x)Æ);
a (strip_tac);
a (once_rewrite_tac [map_eq_sym_rule (µ_elim ¨pfÆ »_axiom)]);
a (rewrite_tac[get_spec ¨MÆ]);
val M_µ_thm = save_pop_thm "M_µ_thm";

set_goal([],¨µpf∑ $∂ pf § M (Ãx∑ M (Ãx∑ pf x))Æ);
a (strip_tac);
a (once_rewrite_tac [map_eq_sym_rule (µ_elim ¨pfÆ »_axiom)]);
a (prove_tac[get_spec ¨MÆ]);
val M_∂_thm = save_pop_thm "M_∂_thm";
=TEX
}%ignore

\subsection{Propositions}



πHOLCONST
‹ Nâ2: (BOOL) ≠ BOOL
˜
‹ µs∑ N s § µp∑ p ç s ¥ ≥ p
∞


%\section{Russell's Logical Atomism}

%\section{Emil Post on Propositional Logic}

