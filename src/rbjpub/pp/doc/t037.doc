=IGN
val _ =
	let open ReaderWriterSupport.PrettyNames;
	in add_new_symbols [ (["identeq"], Value "\233", Simple) ]
end;
=TEX

\def\rbjidtACNdoc{$$Id: t037.doc,v 1.2 2010/07/12 13:49:38 rbj Exp $$}

I will endeavour to follow the structure of Grice's paper \emph{Vacuous names}\cite{griceVN, quineWO}.
However, the method employed for the formal analysis, which is called ``shallow embedding'', is essentially semantic, and involves addressing semantic fundamentals before finding manageable syntactic presentations, and we therefore find it necessary to address key aspects of the semantics before considering the details of syntactic derivation.

\subsection{Preliminary Formalities}

Just in case I need multiple incompatible accounts I have a ``top level'' theory under which all other gricean theories will be placed.

=SML
open_theory "rbjmisc";
force_new_theory "grice";
=TEX

\ignore{
=IGN
force_new_pc Û"'grice"Ý;
merge_pcs ["'savedthm_cs_¶_proof"] "'grice";
set_merge_pcs ["rbjmisc", "'grice"];
=SML
set_pc "rbjmisc";
=TEX
}%ignore

\section{The Problem}\label{G1}

Grice uses several lists in his presentation.
To simplify unambiguous reference I have prefixed some of the numbering schemes with capital letters.

Our starting point is a list of eight \emph{inclinations} supplied by Grice and summarised here:

\begin{itemize}\label{inclinations}\index{inclinations}
\item[I1] That individual constants be admitted.
\item[I2] Note that names are sometimes ``vacuous''
\item[I3] Thence that a constant might lack a designatum.
\item[I4] That excluded middle and bivalence nevertheless remain unqualified.
\item[I5] That a claim about (predication to) a non-designating constant be false and its negation true.
\item[I6] That no unusual constraints on ``U.I.'' \footnote{Universal Instantiation} and ``E.G.'' \footnote{Existential Generalisation} be introduced.
\item[I7] That the law of identity (in the form $µx· x=x$) be a theorem\footnote{Which seems to suggest that identity is not a predicate.}.
\item[I8] That derivability implies entailment.\footnote{i.e. that the system be sound!}
\end{itemize}

In relation to these Grice points out two \emph{difficulties} as follows:

\begin{itemize}\label{difficulties}\index{difficulties}
\item[(a)] I2, I3 and I7 between them seem prima facie to enable proofs of the existence of non-existent entities (e.g. ``Pegasus exists'').

\item[(b)] I5 and I6 would if gratified permit us to infer that there exists something which does not fly from the premise that Pegasus does not exist.

\end{itemize}

He then lists five possible \emph{resolutions} the difficulties:

\begin{itemize}\label{resolutions}\index{resolutions}
\item[R1] To resist I3 and insists that constants have a designatum.
\item[R2] Resisting I4 and I5, insist that a predication to a non designating term and their negations lack a truth value. 
\item[R3] Resist I1 and do without individual constants.
\item[R4] Resist I2 by insisting that all constants have a desgnatum, which might perhaps ``be'' without existing.
\item[R5] Resist I6 by adding requirements on existential generalisation that the relevant constant be shown to designate.
\item[R6] Resist I8, allowing that the deductive system be not strictly sound, but only so subject to the constants used as in 6 designating.
\end{itemize}

Grice does not discuss any of these alternatives, but instead proposes to attempt to square the circle by devising a system which satisfies all these (apparently) incompatible inclinations.

\section{System Q: Objectives}

Grice now proposes a first order predicate calculus meeting two particular objectives, spelt out in five points of further detail.

\begin{itemize}\label{objectives}\index{objectives}
\item[(i)] That a sentence such as ``Pegasus does not fly'' be capable of rendition in two distinct ways one of which will be true and the other false in the case that Peagasus does not exist. 
These correpond to disambiguations of the logical structure of the sentence either as predicating non-flying or denying a predication as flying.
\item[(ii)] That in either case the inference from ``Pegasus does not fly'' to ``there is something which does not fly'' is to be admitted.
\end{itemize}

\begin{itemize}\label{objectivesdetailed}\index{objectives!detailed}
\item[O1] U.I. and E.G. are acceptable without special side conditions.
\item[O2] Some sentences involving non-denoting constants will be true and provable.
\item[O3] It will be formally decidable whether a sentence depends for its truth on whether some constant designates.
\item[O4] It will be possible to find in Q representation of sentences such as ``Pegasus exists''.
\item[O5] There will be an extension of Q in which identity is represented.\footnote{No discussion here of whether identity is a predicate.}
\end{itemize}

\section{Scope}

A part of the novelty and difficulty in system Q lies in its special provisions for controlling the ``scope'' of names.

The use of the word scope in this context is distinct from its more common usage (at least in mathematical logic and computer science) in which the (or a) scope of a name (variable or constant) is a syntactic region within which it may be used with the same sense (as opposed to uses of the same name for entirely distinct purposes as may appear in different scopes of the name).

In this case the relevant ambiguity of scope is not a region of significance of the name, but the extent of some predicate applied to the name.
Thus in the example used by Grice, there is an ambiguity in the sentence ``Pegasus does not fly'' about the logical structure of the sentence which leaves doubt about what predicate is being applied to Pegasus.
We may regard the sentences as predicating ``x does not fly'' of Pegasus, or we may be denying that the predicate ``flies'' applies to Pegasus.
The question is whether the negation is part of the predicate or is applied to the result of the predication.

In System Q Grice provides a predicate logic in which numerical subscripts may be used to disambiguate the predications which are taking place.
Unfortunately, this notation, like the dot notation in Principia Mathematica is not as readable as the more usual use of brackets for disambiguating scope.
Furthermore, this aspect of the syntax would be hard to replicate by the methods we propose to adopt, which are intended to permit a lightweight analysis of semantc issues and their connection with the validity of sentences and the soundness of derivations.

In our analysis we will therefore provide for the desired control over predication by the use of Church's lambda notation.
We expect that our syntax will be readily related to that of System Q.

The use of lambda notation may be illustrated simply using Grice's Pegasus example.
We adopt a special notation for predication which will be an infix subscript g $¬‰g®$, so the application of the predicate $¬Flies®$ to the term $¬Pegasus®$ will be written%
=INLINEFT
¬Flies ‰g Pegasus®
=TEX
.

The subscript g is used just for the special kind of predication in which the object may possibly not exist, we still have the old fashioned kind which will be used in the lambda calculus primarily for the required disambiguation of the newer kind of predication.

The two variants of ``Pegasus does not fly'' are then expressed as $¬³ (Flies ‰g Pegasus)®$ and $¬(Ìx· ³ Flies x) ‰g Pegasus®$.
In the first case the predicate applied to Pegasus is $¬Flies®$, in the second case it is $¬Ìx· ³ Flies x®$ (which is a negation of Flies).

This technique makes it possible to examine the semantic aspects of System Q using formal machine assisted deductive reasoning, while avoiding the special intricacies of formalising Grice's special syntax.
Whether this pays off in terms of perspicuity and penetration of the analysis remains to be seen.

We will therefore omit all discussion of Grices notational devices for scoping at this point, but will consider later how much may have been lost by this approach.

\section{Deductive Systems}

\subsection{Glossary}

\subsection{Symbols}

\subsection{Formulae}

\subsection{Inference-Rules}

\section{Semantic for Q}

Grice goes on from his discussions of scope to the presentation of the remaining aspects of the syntax, notably of the various aspects of the deductive system.

We will track this discussion of inference in a semantic way, demonstrating the semantic principles which ensure the soundness of the deductive system presented in a manner which makes reasonably clear the relationship between the two.
This amounts to a semantic embedding into HOL of a system which is intended to be semantically parallel to system Q, though not syntactically quite the same.

To do this we must first provide some basic definitions on which the semantics is based, and before doing that I must explain part of the method of semantic embedding which might seem to, but does not in fact, prejudice one of the principle issues at stake.
That is that the embedding consists in a development of a semantics which is purely denotational, i.e. in which every expression has a denotatum.
These denotation need not be what one would naturally suppose the reference of an expression to be, they may be purely abstract surrogates which suffice to describe the truth conditions of the language.
So the way we model a language in which term expressions may not denote, is by taking the range of things which they might possibly denote, and adding one or more extra items which are values which they are give to indicate that they have no denotation.

\subsection{Interpretations Q}

Grice's definition of an interpretation of Q (VIII A of \cite{griceVN}) is ambiguous in what it says about the domain of an interpretation.
The domain is a set of correlates, some of which may be unit sets the element of which is a designatum.
Grice tells us that there need not be any such unit sets, but does not say explicitly that there may be no other correlates.
He does tell us that he has in mind that there will be exactly one non-designating correlate, the empty set, but he does not place this as a requirement, so the significance of his having this in mind is unclear.

There are three possibilities concerning the number of non-designating correlates in an interpretation, that there are none, exactly one, or more than one.
In relation to these there are a number of possible positions in relation to the definition of an interpretation, the most obvious are:

\begin{enumerate}
\item no constraint
\item there must be at least one
\item there must be exactly one
\end{enumerate}

Of course there may be more, but I propose to discuss just these three.

From a literal reading of Grice in this section I would take the first.
However, from the fact that he explicitly allows there to be no designata but does not explicitly say this for non-designating correlates, we might infer that he intends  but does not state that there will be at least one non-designating correlate.
Alternatively we might take the case he had in mind more presciptively and work with item 3.

These are significant semantically, of course.

Allowing interpretations with no designata will create problems with descriptions if these were to be introduced into Q, for one would then have no correlate available for a non-designating descriptions.
It also affects a matter which Grice later discusses, which is whether certain existential claims are valid, notably the claim that there is something which does not exist.
This (or something similar%
=INLINEFT
¶x‰4· ³‰3 F‰1 x‰2
=TEX
, VIII B p137) Grice later claims to be valid, and this is evidence against interpretation 1 in favour of 2 or 3.

Item 2, though the one perhaps preferred by Grice, has the disadvantage that all non-designating terms have the same correlate, and will therefore be equal in a sense of equality which satisfies the universal law of reflexivity of identity.
Do we want Pegasus and Sherlock Holmes to be identical?

Nevertheless, in our shallow embedding of Q we will adopt 2, for in addition to its being preferred by Grice in some sense, and its confirming Grice's belief in the validity of the cited existentials, it allows a simpler and more transparent shallow embedding than either of the others.
\emph{[fuller explanation to be supplied]}

First let us give a name for the domain of discourse of an interpretation of the language $Q$.
We will suppose this to be a ``type'' in HOL, but will leave open the type by using a type variable.
To serve as denotions for terms in system $G_{HP}$ we use a disjoint union of two types, the first of which is the type of those things which do exist and the second is atype of surrogates for those things which do not exist.
We use \emph{V} for Value.

A new theory is needed which I will call ``ghp1'' which is created here:

=SML
open_theory "grice";
force_new_theory "ghp1";
set_pc "rbjmisc";
=TEX

Grice introduces a special notion of interpretation in terms of which to give the semantics of Q.
An interpretation has a domain which is a set of correlates, some of which are unit sets, in which case the member of that unit set is called a designatum.
For uniformity type we assume that all correlates are sets of sets.

We allow the domain of an interpretation to be any type and for any element of that type to be identified as THE non-designating element.

¹HOLCONST
Ü ÛâÝ: 'a 
÷üüüüüü
Ü T
°

We can then use inequality with $â$ as the property of being a designatum.
The structure of these interpretations is isomorphic to that of Grice's preferred notion of interpretation, even though we do not use unit sets for correlates of designating constants.

We may use HOL constants of appropriate type for Q constants and predicates, and HOL variables for Q variables, and the consequence should be that the theorems provable in HOL should be just those which are valid in Q.

This is done by using T and F instead of Corr(1) and Corr(0) respectively.



Now we define our special kind of predication.

=SML
declare_infix (400, "‰g");
=TEX

¹HOLCONST
Ü Û$‰gÝ: ('a ­ BOOL) ­ 'a ­ BOOL
÷üüüüüü
Ü µ p t· p ‰g t ¤ if t = â then F else p t
°

The definition says, if the term denotes then apply the predicate to the value denoted, otherwise the result of the predication is F (false).

Now let's introduce Pegasus.
The ``definition'' just says that Pegasus is the non-denoting value.

¹HOLCONST
Ü ÛPegasusÝ : 'a
÷üüüüüü
Ü Pegasus = â
°

And the predicate \emph{Flies}.
Note that the predicates apply only to real desigata under the normal HOL application, its only under our special predication that they become applicatble to possibly non denoting values.

¹HOLCONST
Ü ÛFliesÝ : 'a ­ BOOL
÷üüüüüü
Ü T
°

We can now prove in HOL the elementary facts we know about Pegasus flying, yielding the following theorems:

=GFT
ÛPegasus_lemma_1Ý =
	ô Flies ‰g Pegasus ¤ F

ÛPegasus_lemma_2Ý =
	ô (Ì x· ³ Flies x) ‰g Pegasus = F

ÛPegasus_lemma_3Ý =
	ô ³ Flies ‰g Pegasus

ÛPegasus_lemma_4Ý =
	ô ³ (Ì x· ³ Flies x) ‰g Pegasus
=TEX

\ignore{
=SML
val g_def = get_spec ¬$‰g®;
val Pegasus_def = get_spec ¬Pegasus®;
val Flies_def = get_spec ¬Flies®;

set_goal([], ¬Flies ‰g Pegasus ¤ F®);
a (rewrite_tac [g_def, Pegasus_def]);
val Pegasus_lemma_1 = save_pop_thm "Pegasus_lemma_1";

set_goal([], ¬(Ìx· ³ Flies x) ‰g Pegasus ¤ F®);
a (rewrite_tac [g_def, Pegasus_def]);
val Pegasus_lemma_2 = save_pop_thm "Pegasus_lemma_2";

set_goal([], ¬³ Flies ‰g Pegasus®);
a (rewrite_tac [g_def, Pegasus_def]);
val Pegasus_lemma_3 = save_pop_thm "Pegasus_lemma_3";

set_goal([], ¬³ (Ìx· ³ Flies x) ‰g Pegasus®);
a (rewrite_tac [g_def, Pegasus_def]);
val Pegasus_lemma_4 = save_pop_thm "Pegasus_lemma_4";
=TEX
}%ignore

In case you may doubt the neutrality of our use of lambda expressions, we show here that they are inessential to this approach, and can be dispensed with in favour of explict definitions of the predicates required.
Thus we may instead define a predicate which is the denial of \emph{Flies}:

¹HOLCONST
Ü ÛDoesnt_FlyÝ : 'a ­ BOOL
÷üüüüüü
Ü µx· Doesnt_Fly x ¤ ³ Flies x
°

We can then prove the slightly reworded:

=GFT
ÛPegasus_lemma_5Ý = ô Doesnt_Fly ‰g Pegasus ¤ F
=TEX

the proof of which need not mention the predicate, since it suffices to know that the subject does not exist.

\ignore{
=SML
set_goal([], ¬Doesnt_Fly ‰g Pegasus ¤ F®);
a (rewrite_tac [g_def, Pegasus_def]);
val Pegasus_lemma_5 = save_pop_thm "Pegasus_lemma_5";
=TEX
}%ignore

This general claim can be expressed in HOL and proven.
To make it read sensibly however, it is best for us to define the relevant notion of existence.

¹HOLCONST
Ü ÛExistsÝ : 'a ­ BOOL
÷üüüüüü
Ü µx· Exists x ¤ T
°

The definition looks a bit bizarre and works for just the same reason that we do not need to know the predicate to know that predication to a non-existent will be false.
This predicate will always be true, unless it is applied to a term which fails to denote.
So we satisfy another of Grice's desiderata, that the non-existence of Pegasus can be stated.

But first a more general result:

=GFT
Exists_lemma_1 =
	ô µ P x· ³ Exists ‰g x ´ ³ P ‰g x
=TEX

\ignore{
=SML
val Exists_def = get_spec ¬Exists®;

set_goal([], ¬µP x· ³ (Exists ‰g x) ´ ³ (P ‰g x)®);
a (REPEAT µ_tac THEN rewrite_tac [g_def, Exists_def]
	THEN REPEAT strip_tac);
val Exists_lemma_1 = save_pop_thm "Exists_lemma_1";
=TEX
}%ignore

Desideratum A8 is satisfied by the standard quantifiers in HOL.

=GFT
Û¶_lemma_1Ý = 
	ô µ P· P ‰g Pegasus ´ (¶ x· P ‰g x)

Ûµ_lemma_1Ý =
	ô µ P· (µ x· P ‰g x) ´ P ‰g Pegasus
=TEX

\ignore{
=SML
set_goal([], ¬µP:'a ­ BOOL· P ‰g (Pegasus:'a) ´ ¶x:'a· P ‰g x®);
a (REPEAT strip_tac);
a (¶_tac ¬Pegasus®);
a (asm_rewrite_tac []);
val ¶_lemma_1 = save_pop_thm "¶_lemma_1";

set_goal([], ¬µP· (µx· P ‰g x) ´ P ‰g Pegasus®);
a (REPEAT strip_tac);
a (asm_rewrite_tac []);
val µ_lemma_1 = save_pop_thm "µ_lemma_1";
=TEX
}%ignore


\ignore{
=SML
force_new_pc Û"'ghp1"Ý;
merge_pcs ["'savedthm_cs_¶_proof"] "'ghp1";
set_merge_pcs ["rbjmisc", "'ghp1"];
=TEX
}%ignore

\subsection{The Desiderata}


\section{Conclusions}
