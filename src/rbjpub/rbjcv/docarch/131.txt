.nr PS 11
.nr VS 14
.so /usr/local/rbj/keys/roff.defs
.nr P 1 Presentation Flag
.nr D 0 Document Flag
.LP
.TL
Formal Methods
.AU
Roger Jones
.AI
ICL Defence Systems
.AB
.ct D
.cx
.ct P
.cx
.AE
.ds LH \s-8Formal Methods\s+8
.ds CH \s-2\s+2
.ds RH \s-8\*(DY\s+8
.ds LF \s-8DS/FMU/RBJ/131\s+8
.ds CF \s-2\s+2
.ds RF \s-8Issue 0.1 Page \\n(PN\s+8
.nr PS 14
.nr VS 16
.bp
.KS
.DS C
\fBWHAT ARE FORMAL METHODS FOR?\fP
.DE
.LP
Typically, to help achieve the following objectives:

.IP "CORRECT FORMULATION of REQUIREMENTS"
Formal specification languages may be used in the process of identifying requirements in order to improve the precision with which requirements are stated, and reduce the probability of implementing a system which fails to meet the true requirements.

.IP "PRECISE SPECIFICATION of PRODUCT"
A precise formally stated specification of a product will provide implementors with a firmer base on which to work.
It enables conformance to requirements to be assessed at the earliest possible stage in product development.

.IP "IMPROVED QUALITY ASSURANCE"
A primary method for improving QUALITY ASSURANCE for software developments is the use of inspection techniques (e.g. FAGAN inspections), to detect errors at the earliest possible stage in the development cycle.
This technique depends upon the inspection having some documentation against which to assess the document under inspection.
If specifications and designs are written informally then there is scope for misunderstanding both by implementors and inspectors.
Formal methods can be used to improve the rigour of inspection processes,
and may ultimately allow inspections to be supported by formal correctness proofs.

.IP "REDUCED PRODUCT LIFE CYCLE COSTS"
A significant number of software developments can benefit from the use of formal methods by some reduction in the product development costs.
When total life cycle costs are considered, the benefits will be much larger, as a result of reduced support and maintenance costs.

.IP "HIGH ASSURANCE APPLICATIONS"
Where a very high degree of assurance of the satisfaction of critical requirements is necessary, formal specification techniques can be supplemented by formal verification techniques.
These use mathematical reasoning about the relationship between a specification and a design or implementation to show that the implementation is correct.
.KE
.KS
.DS C
\fBHOW DO FORMAL METHODS WORK?\fP
.DE
.LP
Primarily by the use of mathematical techiques, and formal specification languages.
.IP "USE of MATHEMATICAL MODELS"
The use of mathematical models permits work on requirements, specifications and designs to proceed without premature consideration of detailed implementation techniques.
This improves the likelihood of the specification and design being correct,
and provides a firmer basis for implementation.

.IP "USE of FORMAL SPECIFICATION LANGUAGES"
The use of mathematical techniques is more effective if formal specification languages are used.
These permit mathematical models to be described without ambiguity, and make possible automatic processing of specifications.
Automatic processing enables machine checking of the well formedness of specifications, and the verification of formal proofs.

.IP "METHODOLOGIES"
The Vienna Development Method (VDM) provides an account of how formal specifications can be refined through various stages of design into a form suitable for implementation.
Formal methods provide systematic ways of proceding from informally understood requirements, through various formal descriptions to an implementation which can be shown to satisfy the requirements.
.KE
.ig cx
.KS
.DS C
\fBthe SCOPE of APPLICABILITY of FORMAL METHODS\fP
.DE
.LP
The potential scope is very broad, but the state of the art and the quality of tooling currently limit the areas in which benefits may be perceived.
.IP ""
.IP ""
.IP ""
.KE
.cx
.KS
.DS C
\fBWHAT IS the \fISTATE of THE ART\fP
.DE
.IP "the MATHEMATICS FOUNDATIONS of COMPUTING"
A very large amount of academic research has been and continues to be done in this area.
I think it is true to say that enough is understood to enable formal techniques to be effectively applied to practical problems, but that there remains considerable scope for research, even of a fairly fundamental nature, which may result in substantial improvements in the effectiveness with which formal methods can be exploited.
.IP "SPECIFICATION LANGUAGES"
The primary usable deliverable from formal methods reseach has been specification languages.
The most commonly used formal specification languages in Europe are probably VDM, Z and OBJ.
.br
These languages are in a state in which they can be used effectively in software developments.
.IP "TOOLS"
The situation on tooling is rather poor.
Tools available are generally research vehicles or prototypes, and therefore frequently of questionable quality.
This applies even to very basic tools such as editors and type checkers.
.IP
Tools for formal reasoning are exclusively research vehicles, and do not precisely match the commonly used specification languages.
.IP
In the current \fIstate of the art\fP formal verification is only achievable in special circumstances, imposes constraints on implementation techniques and is very costly.
.KE
