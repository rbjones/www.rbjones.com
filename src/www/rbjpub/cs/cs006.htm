<HTML>
<HEAD>
<LINK REL=STYLESHEET TYPE="text/css" HREF="../prof/p1sty.txt" TITLE="Resource">
<TITLE>Computing with Reals - some history</TITLE>
</HEAD>

<BODY BACKGROUND="../../rbjgifs/backpi.gif">
<META name="description" content="">
<META name="keywords" content="RbJ">
<A HREF="cs001.htm"><IMG SRC="../../rbjgifs/up.gif" ALT=UP BORDER=0 ALIGN=LEFT></A>
<CENTER><H1>Computing with Reals</H1></CENTER>
<CENTER><H2>Some History</H2></CENTER>
<CENTER><TABLE CELLPADDING=5>
<TR><TH COLSPAN=2><A HREF="../maths/math007.htm">Reals - how they might have developed</A></TH>
<TH><A HREF="../maths/math008.htm">Thumbnail History of Reals</A></TH>
</TR>
<TR VALIGN=TOP><TH><TABLE CELLPADDING=5>
<TR><TH><A HREF="#Constructive">Constructive Mathematics</A></TH></TR>
<TR><TH><A HREF="#Turing">Alan Turing (1936)</A></TH></TR>
<TR><TH><A HREF="#Recursion">Recursion Theory (1936-)</A></TH></TR>
</TABLE></TH>
<TH><TABLE CELLPADDING=5>
<TR><TH><A HREF="#Rice">Rice (1954)</A></TH></TR>
<TR><TH><A HREF="#Minsky">Marvyn Minsky (1967)</A></TH></TR>
<TR><TH><A HREF="#Bishop">Errett Bishop (1967)</A></TH></TR>
<TR><TH><A HREF="#Scott">Dana Scott (1970-)</A></TH></TR>
</TABLE></TH>
<TH><TABLE CELLPADDING=5>
<TR><TH><A HREF="#Wiedmer">Wiedmer (1976)</A></TH></TR>
<TR><TH><A HREF="#Weihrauch">Weihrauch (1995)</A></TH></TR>
<TR><TH><A HREF="#Recent">Other Recent Work</A></TH></TR>
<TR><TH><A HREF="#"></A></TH></TR>
</TABLE></TH>
</TR>
</TABLE></CENTER>
<P>
I have myself been interested in this area for at least 20 years, (or, since the publication of Minsky's book, depending on what you count as interest).
It has never got high enough on my priority list for more than the odd tinker.
Recently my interest was revived because I was thinking about theorem provers capable of doing automatically computations in real analysis, and for this purpose the ability to do <I>exact</I> computations with reals is essential (IMO).
<P>
The following is my best shot at an outline of the history of the subject.
I have no doubt whatever that the story is incomplete, and its probably wrong too.
If you know better, spare me a few minutes to help brush up or fill in the picture.
<P>
<A NAME="Constructive"> </A>
<CENTER><H3>Constructive Mathematics</H3></CENTER>
<P>
The story surely must start here.
Its not easy to say where constructive mathematics starts, historically, since some say that maths always was constructive until non-constructive techniques appeared in the 19th century.
However, the emergence of intuitionism, the first explicitly constructive doctrine, as a distinct thread in mathematical philosophy is a phenomenon of the early twentieth century.
I believe that intuitionism was the first brand of constructivism to emerge, and has been followed by many others.
<P>
Constructive mathematics is distinguished by a particular concern for the computational content of mathematics, and often by a rejection of classical mathematics and classical logics.
Classical mathematics is founded in Cantor's set theory, which builds up to (and beyond) the complex analysis widely exploited in science and engineering.
Some of the criticisms, levelled by intuitionists and other constructivists againsts classical mathematics at a time long before the invention of digital computers (or even Turing machines), are not so very far from the feelings which a scientifically oriented software engineer might feel about the use in science of number systems which simply aren't implementable computationally.
<P>
To those of us who were born after the invention of the digital computer, who learned about recursion theory in our youths, (perhaps even those who escaped the recursion theory, but couldn't escape computers), the writings of intuitionist may appear unnecessarily obscure.
Recursion theory provides a basis for an understanding of computability separated from too great an exposure to philosophy.
<P>
<A NAME="Turing"> </A>
<CENTER><H3>Alan Turing, 1936</H3></CENTER>
<P>
As far using computers for real computations is concerned, it looks like Turing had this idea
first.
And that was before the computers were invented so its pretty good going!
<P>
Computable reals are defined in Turing's first classic paper <A HREF="../philos/bibliog/t.htm#Turing36"><EM>[Turing36]</EM></A> where he uses (what we now call) universal Turing machines to show that there exist unsolvable problems in elementary number theory.
In this paper Turing defines computable reals as those whose decimal expansion is computable by Turing machine.
Pretty soon he spotted that this is not so good (not what we would now call an <EM>admissible representation</EM>) and comes out with a correction in <A HREF="../philos/bibliog/t.htm#Turing37"><EM>[Turing37]</EM></A>, where he goes for convergent sequences of nested intervals with rational end-points (which is an "admissible" representation).
<P>
<A NAME="Recursion"> </A>
<CENTER><H3>Recursion Theory</H3></CENTER>
<P>
From the works of Turing (and Church, G&ouml;del, Kleene...) emerged recursion theory, constructive mathematics de-mystified.
<P>
A precise mathematical understanding of computation arrived well in advance of the digital computer.
This appeared with the notion of an <I>effective procedure</I> which was introduced by logicians in the 30s for the purpose of demonstrating the unsolvability of certain classes of mathematical problem.
At that time multiple independently constructed accounts of what consisted of effective methods proved to be equivalent, including three which have all played significant roles subsequently in computer science.
Church's lambda calculus, Turings machines, and Posts productions systems (closely related to Chomsky's generative grammers, which feature in the theory of languages and automata) were all shown to be equivalent, and are all computationally equivalent to abstract digital computers with unbounded (but finitely utilised) memories.
<P>
This provides a basis for discussing effective number systems independently of any philosophical  stance on the nature of mathematics, and permits the subject to be addressed in the context of classical mathematics rather than as an alternative to classical mathematics.
It is the notion of effectiveness established by Church, Turing and Post which is the objective of the work we are concerned with here.
<P>
For many years after Turing's first papers recursion theory was concerned primarily with computation over the natural numbers and little work was done on computation over reals.
Theoretical studies in this area now seem to be reviving, though practical implementations still don't get so much attention.
<P>
<A NAME="Computers"> </A>
<CENTER><H3>Digital Computers</H3></CENTER>
<P>
Finally the wherewithall.
On the invention of digital computers it became possible in principle to do something which had previously been impracticable.
To fully realise computationally all those parts of classical mathematics which are susceptible of such realisation.
<P>
Sidetracked by the floating point.
<P>
<A NAME="Rice"> </A>
<CENTER><H3>Rice 1954</H3></CENTER>
<P>
Published a paper entitled <A HREF="../philos/bibliog/r.htm#Rice54"><EM>Recursive Real Numbers</EM></A>.
I havn't located a copy yet.
<P>
<A NAME="Minsky"> </A>
<CENTER><H3>Marvyn Minsky, 1967</H3></CENTER>
<P>
Minksy has a material on computable reals in his book <EM>Computation: Finite and Infinite Machines</EM> (<I><A HREF="../philos/bibliog/m.htm#Minsky67">[Minsky67]</A></I>), but he neither identified adequate representations nor considers effective operations.
So I guess this is actually a step backwards from Turing, except that even to mention computable reals in a popular book is something!
<P>
<A NAME="Bishop"> </A>
<CENTER><H3>Errett Bishop, 1967</H3></CENTER>
<P>
Bishop's <A HREF="../philos/bibliog/b.htm#Bishop67"><EM>Foundations of Constructive Analysis</EM></A> is generally regarded as a milestone, enunciating the broader view of the mathematics realisable constructively which had become accepted by the cognoscenti of the time.
Bishop's work is claimed to be an account of constructivism which is moderate in the sense that the results he derives are all true in classical analysis as well as in constructive mathematics (whereas a more radical treatment would also establish constructive results which appear to contradict classical ones).
This encourages the view that constructive mathematics has the same subject matter as classical mathematics, but has more rigorous standards of proof resulting in the establishment of fewer results.
This view is difficult to sustain, nontheless.
<P>
Bishop's definition of a real number (a sequence of rationals converging in a rather slow but clearly prescribed way) is not so far off beam from a classical perspective, but this view may neglect a significant difference in what these two schools would accept as a sequence.
<P>
Nevertheless it is worth considering what kind of analysis we get if we do not place any constraint on the sequences involved (apart from the convergence requirement), which Bishop does not explicitly do.
<P>
This question bears directly on the possibility of realising good computional capabilities in
a proof based mathematical tool supporting a classical treatment of analysis (such as HOL).
<P>
<A NAME="Scott"> </A>
<CENTER><H3>Dana Scott, 1970-</H3></CENTER>
<P>
Surely must get a mention here.
However, I dug out the few papers of his I have, and didn't find anything that seemed likely to help a hacker.
<P>
Domain theory was invented in order to give "mathematical" accounts of the semantics of programming languages, and therefore there is <EM>some</EM> connection with effectiveness.
Scott uses continuity, perhaps as a mathematically nicer concept closely related to effectiveness, and his early innovation was the introduction of lattices.
Connections between effectiveness and domain theory are explicitly studied in, for example, the work of Mike Smyth on <EM>Effectively Given Domains</EM>, from about 1975.
Connections between effectiveness and topos theory appear in Martin Hyland's <EM>The Effective Topos</EM> and later in a Rossolini's doctoral dissertation <EM>Continuity and Effectiveness in Topoi</EM>.
<P>
This is pretty rarified stuff, and theres lots more of it, at best tenuously connected with the practicalities of implementing and exploiting effective real analysis (so far as <EM>I</EM> can see, which isn't very far in this direction!).
If anyone can give me a story for the layman on the relevance of this research to the hacker who just wants software for doing maths I would be very grateful for the enlightenment.
<P>
See also: <I><A HREF="../philos/bibliog/g.htm#Gianantonio93">[Gianantonio93]</A></I> and <A HREF="http://www.md.chalmers.se/Cs/Research/Semantics/APPSEM/webpage/node31.html">Domain Theory and Real Number Computation</A>.
<P>
<A NAME="Wiedmer"> </A>
<CENTER><H3>Wiedmer 1976,1980</H3></CENTER>
<P>
The first paper I have discovered on this topic, which appears to talk  about <I>doing computations</I> over computable reals, is <A HREF=../philos/bibliog/w.htm#Wiedmer76>Exaktes Rechen mit reellen Zahlen</A> by Edwin Wiedmer.
From what little I can understand of this paper (my comprehension of German is tiny) he is past the starting point, at least in having a viable representation over which the basic operations are computable, and probably in having algorithms for doing a good range of computations.
<P>
This report was probably produced early in his research which later resulted in a Doctoral dissertation and a paper entitled <A HREF="../philos/bibliog/w.htm#Wiedmer80">Computing with Infinite Objects</A>.
Since this is in English, the following observations are based upon it.
<P>
Wiedmer affirms (what he claims was even then "well known") that addition is not effective over reals represented by their decimal expansions, but that it is effective if <EM>signed</EM> decimal expansions are used.
In a signed decimal expansion the significance of each position is the same as in a normal decimal expansion, but the range of digits permitted is from +9 to -9 rather than the usual +9 to 0.
<P>
He also connects the question of whether addition is effective with topological criteria.
A connection between effectiveness and continuity had previously been recognised.
Wiedmer connects criteria of continuity with the adequacy of representations of real numbers.
<P>
Wiedmer identifies the class of effectively computable functions over reals with the class of functions described by intuitionists as constructive.
<P>
<A NAME="Weihrauch"> </A>
<CENTER><H3>Weihrauch 1985</H3></CENTER>

See <A HREF="../philos/bibliog/w.htm#Weihrauch85">[Weihrauch85]</A>, <A HREF="../philos/bibliog/w.htm#Weihrauch95">[Weihrauch95]</A> and <A HREF="../philos/bibliog/w.htm#Weihrauch95b">[Weihrauch95b]</A>.

<A NAME="Recent"> </A>
<CENTER><H3>Other Recent(ish) Work</H3></CENTER>
<P>
I have extracted these from the recent discussion in alt.lang.functional and elsewhere,
 and include them for the sake of best up-to-date coverage even though I havn't yet been able to look at any of them.
That means I really don't know whether any of this work passes muster against my basic criteria (let alone anyone elses).
<P>
<A HREF="http://sunsite.informatik.rwth-aachen.de/dblp/db/indices/a-tree/l/Lee_Jr=:Vernon_A=.html">Vernon Lee, Jr.</A>, and <A HREF="http://sunsite.informatik.rwth-aachen.de/dblp/db/indices/a-tree/b/Boehm:Hans=Juergen.html">Hans-J. Boehm</A>, Optimizing Programs over the Constructive
Reals, PLDI 90 (SIGPLAN Notices 25,6), pp. 102-111.
<P>
There is more discussion in the theses of Vernon Lee (Rice University) and
<A HREF="http://pauillac.inria.fr/~menissie/english.html">Valerie Menissier-Morain</A> (Paris VII, in French).
<P>
1986 lisp and FP p162-173
SIGPLAN 1987 symposium on interpreters and interpretative techniques
<P>
Boehm, H. and Cartwright, R., "Exact Real Arithmetic: Formulating
Real Numbers as Functions". Chapter 3 of D.A. Turner, ed., _Research
Topics in Functional Programming_, Addison-Wedsley, 1990.
<P>
The paper ``Vuillemin's Exact Real Arithmetic'' from David R. Lester may be of
help. It appeared in the ``Proceedings of the Glasgow Functional Programming
Workshop 1991'' which are published by the Springer-Verlag in the ``Workshops
in Computing Series''. From the acknowledgments given in the paper, I assume
that David wrote an implementation in Orwell.
<P>
Apparently:
<BLOCKQUOTE>
The classical approach to arbitrary-precision real and complex arithmetic
(floating-point numbers with mantissa of any size) is implemented in many
computer algebra systems and the CLISP Common Lisp implementation.
<P>
The lazy digit sequence approach (similar to lazy power series) has, for
example, been implemented by Michael Stoll in Common Lisp, 1988.
</BLOCKQUOTE>
<P>
<HR WIDTH=70%>
<CENTER>
<A HREF="cs001.htm"><IMG SRC="../../rbjgifs/up.gif" ALT=UP BORDER=0></A>
<A HREF="../index.htm"><IMG SRC="../../rbjgifs/home.gif" ALT=HOME BORDER=0></A>
&copy; <A HREF="../rbj.htm"><IMG SRC="../../rbjgifs/rbjin1.gif" ALT=HOME BORDER=0 ALIGN=ABSMIDDLE></A>
created 1996/1/14 modified 1997/11/30
</CENTER>
</BODY>
</HTML>
