<HTML>
<LINK REL=STYLESHEET TYPE="text/css" HREF="../prof/p1sty.txt" TITLE="Factasia">
<HEAD><TITLE>MainFrame: Mechanisation of Mathematics</TITLE>
<META name="description" content="Numerical, symbolic, and logic based mathematical problem solving contrasted.">
<META name="keywords" content="RbJ MathematicS MathS NumeriC SymboliC LogiC MechanisatioN AutomatioN">
</HEAD>
<BODY CLASS=con>
<CENTER><IMG SRC="../../rbjgifs/mom.gif" ALT="Mechanisation of Mathematics" BORDER=0 ALIGN=TOP WIDTH=94 HEIGHT=73></CENTER>

<A NAME="over"></A>

<TABLE>
<TR VALIGN=TOP><TD WIDTH=200><H1>Overview:</H1>
</TD>
<TD>
<TABLE BORDER=3 CLASS=con CELLPADDING=5 WIDTH="100%">
<TR><TD><FONT SIZE=4><B>
A short story about the mechanisation of mathematics.
Its primary purpose is speculation about what could be done, and how, but there's a bit of background material about what has been done.
</B></FONT></TD></TR>
</TABLE>
</TD></TR></TABLE>
<CENTER><IMG SRC="../../rbjgifs/numsymlo.gif" ALT="Numeric/Symbolic/Logical" USEMAP="#map" BORDER=0>
</CENTER>
<MAP NAME="map">
<AREA COORDS="0,0,194,91" HREF="#numeric">
<AREA COORDS="0,0,342,91" HREF="#symbolic">
<AREA COORDS="0,0,461,91" HREF="#logical">
</MAP>

<TABLE WIDTH="100%">
<TR VALIGN=TOP>
<TD WIDTH="50%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>paradigms</B></A></CENTER>
<FONT SIZE=2>
The discussion hangs around three <I>paradigms</I> for mathematical software, <I><A HREF="#numeric">numeric</A></I>, <I><A HREF="#symbolic">symbolic</A></I> and <I><A HREF="#logical">logical</A></I>.
The first two are already mature, the third is speculative.
Each of these paradigms more or less subsumes the previous one, in terms of its capabilities, with a couple of exceptional aspects which we will mention, both connected with rigour.
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="50%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>logical power</B></CENTER>
<FONT SIZE=2>
When it comes to the logical paradigm, I want to distinguish two levels of capability.
I associate these with the terms <I>engineering logic</I> and <I>intelligent logic</I>.
The second is what you get if you manage (in this restricted logical domain) to crack the machine intelligence problem.
I consider how to do <I>engineering logic</I> in a way which is sympathetic to, but independent of, <I>intelligent logic</I>.
</FONT>
</TD></TR>
</TABLE>

</TD></TR>
</TABLE>


<P>
<A NAME="numeric"></A>

<TABLE>
<TR VALIGN=TOP><TD WIDTH=200><H1>numeric:</H1>
</TD><TD>

<TABLE BORDER=3 CLASS=con CELLPADDING=5 WIDTH="100%">
<TR><TD><FONT SIZE=4><B>
The predominant area of application of computers to mathematics is in brute numeric computation.
</B></FONT>
</TD></TR></TABLE>

</TD></TR></TABLE>


<TABLE WIDTH="100%">

<TR><TD COLSPAN=2>
<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2><TD><FONT SIZE=2>
Alongside sorting punched cards this is what computers were invented for,  and what they have been used for from the very beginning.
Computerised numerical computation is used not only where a mathematician would otherwise have computed by hand or by calculator, but also for problems that would without computers have been inconceivable, and also to solve by brute force problems which a mathematician would solve with more intelligence and less computation (e.g. numerical integration).
</FONT></TD></TR></TABLE>
</TD></TR>

<TR VALIGN=TOP><TD WIDTH="50%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>Numerical Analysis</B></CENTER>
<FONT SIZE=2>
<I>Numerical analysis</I> is concerned with the computational application of mathematical theories built on the real number system, mainly to problems in science and engineering.
For example, numerical integration involves computing the value of some mathematical function at many points and adding these together to obtain a value for the area under the curve of the function, which may correspond to some useful physical quantity such as a distance travelled by a projectile.
</FONT>
</TD></TR>
<TR VALIGN=TOP><TD>
<CENTER><B>Discrete Mathematics</B></CENTER>
<FONT SIZE=2>
Involves integers rather than real numbers and is most conspicuous these days for its cryptographic applications.
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="50%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>Software Paradigm</B></CENTER>
<FONT SIZE=2>
Mainly non-interactive programs taking numeric data input and yielding numeric results.
Problems in this area are often solved by custom programs written in languages such as Fortran or C by applied mathematicians scientists or engineers who understand the problem domain.
</FONT>
</TD></TR>
<TR VALIGN=TOP><TD>
<CENTER><B><A TARGET="_top" HREF="cs001.htm">Computing with Real Numbers</A></B></CENTER>
<FONT SIZE=2>
Numerical analysis should strictly involve computations with real numbers, but since real numbers are hard to represent in computers its usual to settle for floating point numbers.
The practical implications of this seem modest, but it becomes a more significant problem if numeric computation is to be integrated into a more rigorous mathematical environment.
</FONT>
</TD></TR>
</TABLE>

</TD></TR></TABLE>

<P>
<A NAME="symbolic"></A>

<TABLE>
<TR VALIGN=TOP><TD WIDTH=200><H1><A TARGET="_top" HREF="ai029.htm">symbolic</A>:</H1>
</TD><TD>

<TABLE BORDER=3 CLASS=con CELLPADDING=5 WIDTH="100%">
<TR><TD><FONT SIZE=4><B>
The most versatile modern mathematical software is <I>symbolic</I>.
Packages like <I>Mathematica</I> not only crunch numbers but also transform mathematical formulae.
</B></FONT>
</TD></TR></TABLE>

</TD></TR></TABLE>


<TABLE WIDTH="100%">
<TR VALIGN=TOP><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>Symbolic Mathematics</B></CENTER>
<FONT SIZE=2>
Much of the work of mathematicians involves symbolic transformation of mathematical expressions.
When confronted with an integral, a mathematicians first thought would be to obtain a symbolic expression for the value of the integral rather than to undertake numerical integration.
This has the advantage of better efficiency, accuracy and re-usability.
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>Software Paradigm</B></CENTER>
<FONT SIZE=2>
Symbolic mathematics tools such as Mathematica provide an interactive environment with a special programming language oriented towards manipulation of symbolic expressions.
A rich library of numerical and symbolic functions is provided, which are used to evaluate or simplify expressions entered.
The user can extend the environment by defining new mathematical functions or new ways of transforming mathematical expressions.
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>Rigour Deficit</B></CENTER>
<FONT SIZE=2>
Symbolic mathematics tools provide good support for the application of mathematics, but the don't know about <I>proof</I>, and don't really know about <I>truth</I> either.
So they will blindly accept new transformation rules without regard to the soundness of the transformation.
As mathematical assistants, they are agile. and smarter than numeric software, but still, basically, dumb.
To get smart you need rigour, and to get rigour you need logic.
</FONT>
</TD></TR>
</TABLE>

</TD></TR></TABLE>

<P>
<A NAME="logical"></A>

<TABLE>
<TR VALIGN=TOP><TD WIDTH=200><H1>logical:</H1>
</TD><TD>

<TABLE BORDER=3 CLASS=con CELLPADDING=5 WIDTH="100%">
<TR><TD><FONT SIZE=4><B>
The final stage is to build mathematical tools on a proof technology base so that they are in a position to <I>reason</I> about the problems they are given, can comprehend and check mathematical proofs, and maybe eventually come up with intelligent solutions to non-routine problems.
</B></FONT>
</TD></TR></TABLE>

</TD></TR></TABLE>

<TABLE WIDTH="100%">
<TR><TD COLSPAN=3>
<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2><TD><FONT SIZE=2>
If you throw large amounts of computing power at the solution of mathematical problems its not going to be practical (in general) to check that the machine hasn't made an error.
You have to be able to write mathematical software which is <I>reliable</I>.
Software which "understands" the formal foundations of mathematics and is able to enforce rigour on itself is one approach to solving this problem.
</FONT></TD></TR></TABLE>
</TD></TR>
<TR VALIGN=TOP><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B><A TARGET="_top" HREF="ai009.htm"><IMG SRC="../../rbjgifs/formaths.gif" ALT="Formal Maths" BORDER=0 WIDTH=51 HEIGHT=44></A></B></CENTER>
<FONT SIZE=2>
One of the basic motivations behind the Formalised Mathematics is to make practical the kind of rigour in the development of mathematics which was demonstrated by <I>Principia Mathematica</I> but has ever since seemed too much work for too little benefit.
The idea is that formal proofs could become the accepted standard of rigour in the development of new mathematics if computers were able to do the donkey work in constructing and checking the detailed formal proof.
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B><A TARGET="_top" HREF="../logic/engl001.htm"><IMG SRC="../../rbjgifs/englog.gif" ALT="Engineering Logic" BORDER=0 WIDTH=79 HEIGHT=57></A></B></CENTER>
<FONT SIZE=2>
"Engineering Logic" is the name I have adopted for the enterprise of using the technology of formalised mathematics as a basis for the development of rigorous symbolic mathematical tools which are capable of delivering similar functionality to that provided by today's symbolic tools + rigour.
I conjecture that by a substantial engineering effort this sort of capability could be realised without dependence on research advances in artificial intelligence.
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B><IMG SRC="../../rbjgifs/intellog.gif" ALT="Intelligent Logic" BORDER=0 WIDTH=78 HEIGHT=75></B></CENTER>
<FONT SIZE=2>
"Intelligent Logic" is the name I have adopted for the pie-in-the sky project of realising an <I>intelligent</I> mathematical assistant by gradual evolutionary extension of the mathematical capabilities of "Engineering Logic" based tools.
This would be a distributed open-source project, delivering a distributed intelligence and is a subtheme of:
<A HREF="ai017.htm" TARGET="_top"><IMG SRC=../../rbjgifs/globsupb.gif BORDER=0 ALT="The Global Superbrain" ALIGN=TOP WIDTH=135 HEIGHT=64></A>


</FONT>
</TD></TR>
</TABLE>

</TD></TR></TABLE>



<P>
<CENTER>
<HR WIDTH=70%>
<A TARGET="_top" HREF="index.htm"><IMG SRC="../../rbjgifs/up.gif" ALT="UP" BORDER=0></A>
<A TARGET="_top" HREF="../index.htm"><IMG SRC="../../rbjgifs/home.gif" ALT="HOME" BORDER=0></A>
&copy;
<A HREF="../rbj.htm" TARGET="_top"><IMG SRC="../../rbjgifs/rbjin1.gif" ALT=RBJ ALIGN=ABSMIDDLE BORDER=0></A>
created 1995/10/29 modified 1998/8/28
</CENTER></BODY></HTML>
