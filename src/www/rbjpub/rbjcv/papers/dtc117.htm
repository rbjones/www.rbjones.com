<HTML>
<HEAD>
<TITLE>Logical foundations and formal verification - VERIFICATION</TITLE>
<META name="keywords" content="RbJ FoundationS PrograM VerificatioN LogiC">
<META name="description" content="
This position paper presents an approach to the design and development
of environments for the production of computer systems for which we
require to have very high degrees of assurance of correctness.
">
</HEAD>
<BODY>
<A HREF="dtc110.htm"><IMG SRC="../../../rbjgifs/up.gif" ALT=up BORDER=0></A>
<P>
7.  VERIFICATION
<P>
There are well known and serious problems in verifying verification
systems.
<P>
As a result of G&ouml;del's work [G&ouml;d31], we know that a formal foundation
system cannot usefully be used to verify itself.    We are therefore
bound ultimately to accept a formal foundation system which has not
itself been formally verified.
<P>
Our reductionist approach to foundations is intended in part as a
rational response to this situation, We suggest-that confidence in our
ultimate formal foundations will be maximised in the following ways:
<OL>
<LI>The formal system should be as simple as possible.
<LI>The system should be transparent to our intuitions.
<LI>Essentially the same foundation should be subjected to
     theoretical scrutiny and practical exposure over a long
     period of time.
</OL>
<P>
Our confidence in the consistency of first order axiomatisations of set
theory is largely based upon their having survived over a long period
of time without having been found inconsistent.  We believe that the
approach to foundations outlined in this paper satisfied points 1 and
2.  We believe also that our formalism is sufficiently flexible to
underpin a wide variety of more specialised formal systems and that
this will increase its chances of receiving the exposure that will in
due time contribute to confidence in its sufficiency and consistency.
In fact we are essentially formalising recursive function theory, a
subject which has now had some 50 years of scrutiny.
<P>
Our foundational reductionist approach results in the step from one
logical level of the system to the next being achieved by definition
rather than axiomatisation.  This converts problems of consistency into
logically less severe problems of opacity.      This way of building on
foundations is guaranteed not to compromise the consistency of the
system, but if there are errors in the definitions then the concepts
defined will not be the ones intended.
<P>
The implementation will be constructed in an analogous way.  We
therefore expect to implement the core foundation system as a logically
secure bootstrap.  This results in subsequent levels of development
being logically guaranteed not to compromise the consistency or
correctness of the implementation.
<P>
Implementation of higher levels of the system will also be provably
correct against their specifications, but this only begins to be
helpful once we have established specification languages which are
significantly more perspicuous than our implementation languages.
<HR>
<CENTER>
<A HREF="dtc110.htm"><IMG SRC="../../../rbjgifs/up.gif" ALT=up BORDER=0></A>
<A HREF="../../index.htm"><IMG SRC="../../../rbjgifs/home.gif" ALT=home BORDER=0></A>
&copy; <A HREF="../../rbj.htm">
<IMG SRC="../../../rbjgifs/rbjin1.gif" ALT=RBJ ALIGN=absmiddle BORDER=0></A> dated 86/7/15 HTML 96/6/6 edited 96/6/15
</CENTER></BODY>
</HTML>
