<HTML>
<LINK REL=STYLESHEET TYPE="text/css" HREF="../../prof/p1sty.txt" TITLE="Factasia">
<HEAD><TITLE>MainFrame: RBJ's Work on The Foundations of Mathematics</TITLE>
<META name="description" contents="A survey of a variety of problems related to the foundations of mathematics which have interested me.">
<META name="keywords" contents="RbJ FactasiA FoundatioN MathematicS">
</HEAD>
<BODY CLASS=con>
<CENTER><H1>RBJ's Work on The Foundations of Mathematics</H1></CENTER>

<A NAME="overview"></A>
<TABLE>
<TR VALIGN=TOP><TD WIDTH=200><H1>Overview:</H1>
</TD>
<TD>
<TABLE BORDER=3 CLASS=con CELLPADDING=5 WIDTH="100%">
<TR><TD><FONT SIZE=4><B>
An overview of the work I have done on the foundations of mathematics.
</B></FONT></TD></TR>
</TABLE>
</TD></TR></TABLE>
<TABLE WIDTH="100%">
<TR VALIGN=TOP><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><A HREF="#introduction"><B>Introduction</B></A></CENTER>
<FONT SIZE=2>
Some preliminary observations.
</FONT>
</TD></TR>
<TR VALIGN=TOP><TD>
<CENTER><A HREF="#rc"><B>Real Computation</B></A></CENTER>
<FONT SIZE=2>My first recollected interest in foundations arose from a concern for better implementation of real analysis on computers, which lead me to consider (though later put aside) constructive rather than classical analysis.
</FONT>
</TD></TR>
<TR VALIGN=TOP><TD>
<CENTER><A HREF="#pp"><B>Post Productions</B></A></CENTER>
<FONT SIZE=2>
When I became acquainted with Principia Mathematica it all seemed a bit mushy to me.
I set about trying to reduce the foundations of mathematics to post productions.
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><A HREF="#rf"><B>Reflexive Foundations</B></A></CENTER>
<FONT SIZE=2>
As a result of trying to design an intelligent knowledge-based system I decided I needed a reflexive foundation system and set about, first looking for one, then trying to devise one.
</FONT>
</TD></TR>
<TR VALIGN=TOP><TD>
<CENTER><A HREF="#cf"><B>Classical Foundations</B></A></CENTER>
<FONT SIZE=2>
Having decided that formal specification languages ought to be foundation systems I did some work on well-founded systems suitable for languages like VDM and Z.
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="50%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><A HREF="#pc"><B>Pure Categories</B></A></CENTER>
<FONT SIZE=2>
I also made an experiment in building a foundation out of pure categories and functors, using the same techniques I had used for other classical foundation systems.
</FONT>
</TD></TR>
<TR VALIGN=TOP><TD>
<CENTER><A HREF="#mech"><B>Mechanisation</B></A></CENTER>
<FONT SIZE=2>
I led the implementation of ProofPower, a tool supporting the formal development of theories in Higher Order Logic.
I continue to advocate the mechanisation of mathematics through this web site.
</FONT>
</TD></TR>
</TABLE>

</TD></TR></TABLE>


<P>
<A NAME="introduction"></A>

<TABLE>
<TR VALIGN=TOP><TD WIDTH=200><H1>Introduction:</H1>
</TD><TD>

<TABLE BORDER=3 CLASS=con CELLPADDING=5 WIDTH="100%">
<TR><TD><FONT SIZE=4><B>
Some preliminary observations.
</B></FONT>
</TD></TR></TABLE>

</TD></TR></TABLE>

<TABLE WIDTH="100%">
<TR VALIGN=TOP><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B></B></CENTER>
<FONT SIZE=2>
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B></B></CENTER>
<FONT SIZE=2>
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B></B></CENTER>
<FONT SIZE=2>
</FONT>
</TD></TR>
</TABLE>

</TD></TR></TABLE>



<P>
<A NAME="rc"></A>

<TABLE>
<TR VALIGN=TOP><TD WIDTH=200><H1>Real Computation:</H1>
</TD><TD>

<TABLE BORDER=3 CLASS=con CELLPADDING=5 WIDTH="100%">
<TR><TD><FONT SIZE=4><B>
My first recollected interest in foundations arose from a concern for better implementation of real analysis on computers, which lead me to consider (though later put aside) constructive rather than classical analysis.
</B></FONT>
</TD></TR></TABLE>

</TD></TR></TABLE>

<TABLE WIDTH="100%">
<TR VALIGN=TOP><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>on the margin</B></CENTER>
<FONT SIZE=2>
Even I don't really regard this in any significant sense as work on the foundations of mathematics, but what I am going to mention here are the first stirrings of interest in foundational issues which I can remember.
</FONT>
</TD></TR>
<TR VALIGN=TOP><TD>
<CENTER><B>Minsky</B></CENTER>
<FONT SIZE=2>
Since about 1967 I had been aware from Minsky (<A TARGET="_top" HREF="../../philos/bibliog/m.htm#Minsky67">[Minsky67]</A>) of the idea of a <I>computable</I> real, and of the distinction between that and the <I>real</I> reals.
In 1972, just <I>before</I> I returned to University to do my <I>first</I> degree in Maths and Philosophy I spent some time ruminating in this area.
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>Turing, Church, Post</B></CENTER>
<FONT SIZE=2>
Probably following references from <A TARGET="_top" HREF="../../philos/bibliog/m.htm#Minsky67">[Minsky67]</A> I obtained copies of seminal papers by <A TARGET="_top" HREF="../../philos/bibliog/t.htm#Turing">Alan Turing</A>, <A TARGET="_top" HREF="../../philos/bibliog/c.htm#Church">Alonzo Church</A>and <A TARGET="_top" HREF="../../philos/bibliog/p.htm#Post">Emil Post</A> relating to computability.
I don't think I actually <I>understood</I> much of the detail.
</FONT>
</TD></TR>
<TR VALIGN=TOP><TD>
<CENTER><B>Reals</B></CENTER>
<FONT SIZE=2>
I came to the view that the inadequacy of the available implementations of real arithmetic (on computers) was partly attributable to the fact that mathematics had been developed using the classical concept of <I><A TARGET="_top" HREF="../../philos/glossary/r.htm#Real">real number</A></I> and that it would all have been much better if it had been done with computable numbers.
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>Constructive Mathematics</B></CENTER>
<FONT SIZE=2>
By these means, before I knew much more mathematics than I learnt at school, I found myself with constructive inclinations.
I'm not at all sure that I had even heard of constructive or intuitionistic mathematics at that time.
Later I concluded that the problems which concerned me could be remedied within the framework of classical real analysis.
</FONT>
</TD></TR>
<TR VALIGN=TOP><TD>
<CENTER><B>Computing with Reals</B></CENTER>
<FONT SIZE=2>
My interest, though not a very active one, persists to the present day and gave rise to <A TARGET="_top" HREF="../../cs/cs001.htm">a few web pages</A>.
</FONT>
</TD></TR>
</TABLE>

</TD></TR></TABLE>



<P>
<A NAME="pp"></A>

<TABLE>
<TR VALIGN=TOP><TD WIDTH=200><H1>Post Productions:</H1>
</TD><TD>

<TABLE BORDER=3 CLASS=con CELLPADDING=5 WIDTH="100%">
<TR><TD><FONT SIZE=4><B>
When I became acquainted with Principia Mathematica it all seemed a bit mushy to me.
I set about trying to reduce the foundations of mathematics to post productions.
</B></FONT>
</TD></TR></TABLE>

</TD></TR></TABLE>

<TABLE WIDTH="100%">
<TR VALIGN=TOP><TD WIDTH="30%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>Mathematical Proof</B></CENTER>
<FONT SIZE=2>
By the time I started studying maths as a principle subject at university I was already corrupted.
I didn't like the culturally defined notion of mathematical proof and thought it would be much better to do the proofs properly.
So, I did foundational studies on the side, trying to get a better idea of what was involved.
</FONT>
</TD></TR>
<TR VALIGN=TOP><TD>
<CENTER><B>Principia Mathematica</B></CENTER>
<FONT SIZE=2>
I spent some time working through the elementary parts of Principia Mathematica using a different logic (one from <A TARGET="_top" HREF="../../philos/bibliog/h.htm#Hunter71">[Hunter]</A>, see: ).
I was dissatisfied with Principia in two ways.
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="30%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>Vicious Circles</B></CENTER>
<FONT SIZE=2>
The first was that I didn't like the type system.
Having learnt a lot about computing before coming to Russell, I didn't like what seemed to me an unduly paranoid attitude towards circularity
(notwithstanding Russell's paradox).
Here began a dislike of the limitations of "well-founded" foundation systems which is still with me, and has motivated a great deal of my foundational ruminations from then til now.
</FONT>
</TD></TR>
<TR VALIGN=TOP><TD>
<CENTER><B>Mush</B></CENTER>
<FONT SIZE=2>
It was pretty clear to me that Russell's logical system was defined very poorly.
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="40%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>Sorting Russell with Post</B></CENTER>
<FONT SIZE=2>
I didn't have much idea about semantics in those days, but I thought a good way of pinning down the syntax would be to define it using post productions.
So I spent a fair bit of time during the summer of 1975 working on this problem and had in mind turning it into a final year philosophy project.
Towards the end of the autumn term it became pretty obvious that what I was trying to do was to large a project and it got shelved.
</FONT>
</TD></TR>
<TR VALIGN=TOP><TD>
<CENTER><B>Infinite Regress</B></CENTER>
<FONT SIZE=2>
This was my first confrontation with the problem of infinite regress in defining the foundations of mathematics.
I am still interested in this problem, which however I don't regard as a particularly difficult one.
My perferred approach these days is to provide "meta-circular" formal definitions supplemented with informal disambiguation and some study of the potential ambiguities and way of formally eliminating them.
</FONT>
</TD></TR>
</TABLE>

</TD></TR></TABLE>



<P>
<A NAME="rf"></A>

<TABLE>
<TR VALIGN=TOP><TD WIDTH=200><H1>Reflexive Foundations:</H1>
</TD><TD>

<TABLE BORDER=3 CLASS=con CELLPADDING=5 WIDTH="100%">
<TR><TD><FONT SIZE=4><B>
As a result of trying to design an intelligent knowledge-based system I decided I needed a reflexive foundation system and set about, first looking for one, then trying to devise one.
</B></FONT>
</TD></TR></TABLE>

</TD></TR></TABLE>

<TABLE WIDTH="100%">
<TR VALIGN=TOP><TD WIDTH="45%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>Artificial Intelligence</B></CENTER>
<FONT SIZE=2>
I was interested in AI and in about 1983 I managed to get myself into a part of ICL doing "knowledge engineering".
I also bought an ICL PC and started in my own time working on the design of an intelligent knowledge based system.
This got me into thinking about foundation systems again.
In 1985 I wrote <A TARGET="_top" HREF="../papers/wp32.htm">a paper</A> discussing this "work" for presentation at an "Appin Workshop on Persistent Databases" in which I took the position that knowlege representation languages must be logic and discuss the question of what kind of logic is suitable for that purpose.
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="55%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>Reflexive Foundations</B></CENTER>
<FONT SIZE=2>
One of the key requirements which I then identified was that the logic be "reflexive", for which read: allowing self-application of functions, non-well-founded.
The motivation at this time was simply that an intelligent system must be capable of introspection, and that the proposed system involved a functional knowledge-base which was invoked by applying a function contained in the knowledge-base to the whole knowledge-base.
So I set about looking for a logic which would be suitable for this kind of application.
There is no sign that I was aware at this time of any precise distinction between a <I>foundation system</I> and other kinds of logic, though it was foundation systems that I was looking at.
</FONT>
</TD></TR></TABLE>

</TD></TR></TABLE>

<TABLE WIDTH="100%">
<TR VALIGN=TOP><TD WIDTH="45%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>Combinatory Logic</B></CENTER>
<FONT SIZE=2>
I thought for a while that Combinatory Logic would do the trick.
This seemed particularly appropriate because combinators had been introduced as an implementation technique for functional programming languages, and my prototype knowledge base was combinator reduction system.
Then I discovered that a foundation system combinatory logic had not been very successful and that the versions of combinatory logic which were known to be consistent were weak.
At this point my search for a suitable foundation system turned from "find" to "invent" and I spent many years tugging at this problem until I decided that it wasn't really necessary to have a reflexive foundation system.
I do still think it is desirable.
</FONT>
</TD></TR></TABLE>

</TD><TD WIDTH="55%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>False Dawns</B></CENTER>
<FONT SIZE=2>
At the beginning of 1986 I switched from <I>relational databases</I> to <I>formal methods</I>, which allowed me to do work which came somewhere near the foundations of mathematics.
Shortly after this switch made what I then thought a great breakthrough (and which I now regard as one of my more instructive errors).
This resulted in two papers which were published in extremely obscure corners.
The first, <A TARGET="_top" HREF="../papers/dtc110.htm">Logical foundations and formal verification</A> put forward a stunningly simple formal system as a foundation for program verification (for which you may now read <I>mathematics</I>).
The second, <A TARGET="_top" HREF="../papers/dtc25.htm">Creative Foundations for Program Verification </A> provides a more concise rendering of the sense in which the logical system identified is universal, though it was not until some time later that I realised that the sense in which a foundation systems <I>needs</I> to be universal (to be properly so called) is a stronger one.
</FONT>
</TD></TR></TABLE>

</TD></TR></TABLE>


<P>
<A NAME="cf"></A>

<TABLE>
<TR VALIGN=TOP><TD WIDTH=200><H1>Classical Foundations:</H1>
</TD><TD>

<TABLE BORDER=3 CLASS=con CELLPADDING=5 WIDTH="100%">
<TR><TD><FONT SIZE=4><B>
Having decided that formal specification languages ought to be foundation systems I did some work on well-founded systems suitable for languages like VDM and Z.
</B></FONT>
</TD></TR></TABLE>

</TD></TR></TABLE>

<TABLE WIDTH="100%">
<TR VALIGN=TOP><TD WIDTH="40%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>VDM Standardisation</B></CENTER>
<FONT SIZE=2>
While continuing puzzling over reflexive foundations, I was provoked into giving some thought to well-founded systems by becoming involved in the standardisation activity for the specification language for VDM (the Vienna Development Method).
This was during for a period starting sometime in 1986 until the VDM88 conference in September 1988, at which I gave a side presentation on the foundational work I had been doing (before putting that on the shelf).
</FONT>
</TD></TR>
<TR VALIGN=TOP><TD>
<CENTER><B>Axes (to grind)</B></CENTER>
<FONT SIZE=2>
While I was involved in VDM standardisation I had two axes to grind.
That <B>we should define a proof system</B>, and that the specification language together with its proof rules <B>should be a mathematical <I>foundation</I> system</B>.
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="60%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>Proof System</B></CENTER>
<FONT SIZE=2>
I tried to get the standardisation committee to take proof seriously and to include "proof theory" in the standard as well as semantics.
By this I meant just that a logical system in which one could reason about the specification should be defined.
Hitherto it had been assumed that the logic was something quite distinct from the spefication language, and that some suitable (probably three-valued logic) would be used for that purpose.
This didn't make any sense to me, the proof rules have to be proof rules for the specification language, otherwise there would be some translation involved which would be a source of error.
</FONT>
</TD></TR>
<TR VALIGN=TOP><TD>
<CENTER><B>Foundation System</B></CENTER>
<FONT SIZE=2>
I further, and less successfully, argued that the specification language with its logic should amount to a <I>foundation system</I>, i.e. that it should be strong enough for the development of mathematics by conservative extension alone and similar in proof theoretic strength to ZFC, on the premise that there was no part of mathematics which might not prove necessary for program verification.
A definition of the semantic domains for the language had already been developed and this seemed to me unsuitable for mathematical foundation system (e.g. function spaces were continuous).
</FONT>
</TD></TR>
</TABLE>

</TD></TR></TABLE>

<TABLE WIDTH="100%"><CAPTION><B>New Classical Foundations suitable for VDM and Z</B></CAPTION>
<TR VALIGN=TOP><TD WIDTH="50%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>New Classical Foundations</B></CENTER>
<FONT SIZE=2>
Having argued that the VDM specification language should be amount to a mathematical foundation system, I felt that the proposed semantic domains would not be suitable for such a language, and set about devising more suitable domains.
It was a constraint in the design of the language that it would not require reflexive semantic domains, and so my work on reflexive foundations could be put aside.
I considered what kind of adjustments to classical set theory would be desirable in this more conservative context.
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="50%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>Desirable Features</B></CENTER>
<FONT SIZE=2>
I identified the following features as being desirable in semantic domains for languages such as VDM and Z:
<OL>
<LI>Polymorphism of the <A TARGET="_top" HREF="../../philos/bibliog/m.htm#Milner">Milner</A> kind.
<LI>Features to support modularity and local polymorphic definitions
</OL>
I also added these personal preferences:
<OL>
<LI>ontology of pure functions rather than sets
<LI>logical operators in the domain of discourse (as in STT rather than FOL)
</OL>


</FONT>
</TD></TR>
</TABLE>

</TD></TR></TABLE>

<TABLE WIDTH="100%">
<TR VALIGN=TOP><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>ZFC in HOL</B></CENTER>
<FONT SIZE=2>
First I axiomatised ZFC set theory in the Cambridge HOL system.
This was done in the obvious way by introducing a new type SET and then new axioms which are the naive translations into higher order logic of the axioms of ZFC.
Then I developed the theory a bit in HOL roughly following <I><A TARGET="_top" HREF="../../philos/bibliog/h.htm#Hatcher82">[Hatcher82]</A></I>, stopping before doing arithmetic.
The purpose of this was to provide a rich ontology of sets which could be used to constuct the required semantic domains.
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B>Pure Functions</B></CENTER>
<FONT SIZE=2>
Next the type of <I>pure functions</I> was defined, using sets as representatives.
i.e. a new type PF is introduced which is defined as being in one-one relationship with a subset of SET.
Roughly the sets concerned were all those which can be reached from the empty set by  the process of constructing functions.
This is analogous to the way in which the sets are formed from the e
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B></B></CENTER>
<FONT SIZE=2>
</FONT>
</TD></TR>
</TABLE>

</TD></TR></TABLE>





<P>
<A NAME="pc"></A>

<TABLE>
<TR VALIGN=TOP><TD WIDTH=200><H1>Categories:</H1>
</TD><TD>

<TABLE BORDER=3 CLASS=con CELLPADDING=5 WIDTH="100%">
<TR><TD><FONT SIZE=4><B>
I also made an experiment in building a foundation out of pure categories and functors, using the same techniques I had used for other classical foundation systems.
</B></FONT>
</TD></TR></TABLE>

</TD></TR></TABLE>

<TABLE WIDTH="100%">
<TR VALIGN=TOP><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B></B></CENTER>
<FONT SIZE=2>
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B></B></CENTER>
<FONT SIZE=2>
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B></B></CENTER>
<FONT SIZE=2>
</FONT>
</TD></TR>
</TABLE>

</TD></TR></TABLE>



<P>
<A NAME="mech"></A>

<TABLE>
<TR VALIGN=TOP><TD WIDTH=200><H1>Mechanisation:</H1>
</TD><TD>

<TABLE BORDER=3 CLASS=con CELLPADDING=5 WIDTH="100%">
<TR><TD><FONT SIZE=4><B>
I led the implementation of ProofPower, a tool supporting the formal development of theories in Higher Order Logic.
I continue to advocate the mechanisation of mathematics through this web site.
</B></FONT>
</TD></TR></TABLE>

</TD></TR></TABLE>

<TABLE WIDTH="100%">
<TR VALIGN=TOP><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B></B></CENTER>
<FONT SIZE=2>
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B></B></CENTER>
<FONT SIZE=2>
</FONT>
</TD></TR>
</TABLE>

</TD><TD WIDTH="33%">

<TABLE CELLPADDING=5 WIDTH="100%" CLASS=co2>
<TR VALIGN=TOP><TD>
<CENTER><B></B></CENTER>
<FONT SIZE=2>
</FONT>
</TD></TR>
</TABLE>

</TD></TR></TABLE>



<P>
<CENTER>
<HR WIDTH=70%>
<A TARGET="_top" HREF="index.htm"><IMG SRC="../../../rbjgifs/up.gif" ALT="UP" BORDER=0></A>
<A TARGET="_top" HREF="../../index.htm"><IMG SRC="../../../rbjgifs/home.gif" ALT="HOME" BORDER=0></A>
&copy;
<A HREF="../../rbj.htm" TARGET="_top"><IMG SRC="../../../rbjgifs/rbjin1.gif" ALT=RBJ ALIGN=ABSMIDDLE BORDER=0></A>
created 1998/10/18 modified 1998/10/22
</CENTER></BODY></HTML>