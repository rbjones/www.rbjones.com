<HEAD>
<TITLE>Reflexive Logical Systems</TITLE>
</HEAD>

<BODY BGCOLOR="#e0e0f0">
<META name="description" content="">
<META name="keywords" content="RbJ">
<H1>Reflexive Logical Systems</H1>
<P>

There are many different senses to the term <EM>reflexive</EM>.
<P>
The original source of my interest in these systems was the perceived need for reflexion in intelligent systems.
In this context we consider systems which must be capable of assessing their own behaviour and performance and of modifying that behaviour over time, ideally improving performance against key metrics.
<P>
This introspection and self modification, when thought of from a mathematical viewpoint is most naturally analagous to self application of functions.
<P>
While in computer languages self application may be unproblematic, in logical systems it very often leads to paradox.
In programming languages the functions described are generally computable, and they are most naturally thought of as rules.
The pure lambda calculus provides a beautiful exemplar of this kind of reflexiveness.
<P>
Logical systems however, are often concerned with classical mathematical reasoning, in which a function is thought of as a graph rather than a rule.
Self application in such sytems is more problematic, conflicting with the most common semantic intutions about the nature of the interative heirarchy of sets.
<P>
<HR>
</BODY>
