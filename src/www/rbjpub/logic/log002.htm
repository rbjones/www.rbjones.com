<HEAD>
<TITLE>Effective Procedures</TITLE>
<META name="description" content="An informal definition of the notion of effective procedure.">
<META name="keywords" content="RbJ">
</HEAD>

<BODY BGCOLOR="#e0e0f0">
<A HREF="index.htm"><IMG SRC="../../rbjgifs/up.gif" ALT="UP" BORDER=0 ALIGN=LEFT></A>

<A NAME="EffectiveProcedure">
<CENTER><H1>Effective Procedures</H1></CENTER>
<P>
The notion of an <EM>Effective Procedure</EM> was introduced by <EM>Alonzo Church</EM> for the purpose of demonstrating the unsolvability of certain problems.
<P>
Useful books in this area are <A HREF="../philos/bibliog/m.htm#Minsky67"><EM>Marvin Minsky</EM></A> (lightweight, but very interesting) <A HREF="../philos/bibliog/b.htm#Boolos74"><EM>Boolos&amp;Jeffrey</EM></A> (middle ground) or <A HREF="../philos/bibliog/r.htm#Rogers67"><EM>Hartley Rogers</EM></A> (a classic text for serious logicians).
<P>
Absolute unsolvability results are difficult to produce because the <EM>meaning</EM> of <EM>unsolvable</EM> remains unclear until the methods permitted in a solution are spelt out.
(who knows what can be done with a bit of divine inspiration?)
The result obtained by Church has nonetheless an absolute character, because the notion of effective procedure which he used in his unsolvability results was subsequently shown to be equivalent to a variety of quite different formulations.
<P>
Among the alternative formulations are:
<P>
<DL>
<DT>Church's Lambda Calculus
<DT>Turing Machines
<DT>Kleene's General Recursive Functions
<DT>Post production systems
</DL>
<P>
All of these are essentially equivalent in power to what we may think of informally as a digital computer with unlimited memory (unlimited secondary memory will do).
Each of the above systems can be thought of alternative ways of encoding algorithms, or alternative programming languages.
<P>
The general topic of computability, studied independently of how algorithms are represented, is known as recursion theory.
Certain elementary terms from that theory are convenient for us in elementary logical treatises.
<P>
<A NAME="Decidable">
<H4>Decidable</H4>
A set is effectively <EM>decidable</EM> if there exists an effective procedure which will determine whether any candidate is a member of that set.
Such an effective procedure will always terminate within a finite number of computation steps giving the determination of whether the candidate is or is not a member of the set.
<P>
<A NAME="SemiDecidable">
<H4>Semi-Decidable</H4>
A set is effectively <EM>semi-decidable</EM> if there is an effective procedure which, given a candidate member of the set, will terminate after a finite number of steps if that candidate is a member, confirming the membership.
If the candidate is not a member the procedure will either terminate without confirming membership, or else will never terminate.
<P>
<HR WIDTH="70%">
<CENTER>
<A HREF="index.htm"><IMG SRC="../../rbjgifs/up.gif" ALT="UP" BORDER=0></A>
<A HREF="../index.htm"><IMG SRC="../../rbjgifs/home.gif" ALT="HOME" BORDER=0></A>
&copy; <A HREF="../rbj.htm"><IMG SRC="../../rbjgifs/rbjin1.gif" ALT="RBJ" ALIGN=absmiddle BORDER=0></A>
created 1995/3/7 modified 1997/10/3
</BODY>
