<HEAD>
<LINK REL=STYLESHEET TYPE="text/css" HREF="../../prof/p1sty.txt" TITLE="Factasia">
<TITLE>Pure Combinatory Logic</TITLE>
</HEAD>
<BODY CLASS=con>
<A TARGET="_top" HREF="index.htm"><IMG SRC="../../../rbjgifs/up.gif" ALT=UP ALIGN=LEFT BORDER=0></A>
<A TARGET="_top" HREF="cl001.htm"><IMG SRC="../../../rbjgifs/lskicube.gif" ALT="Lambda-SKI cube" BORDER=0 ALIGN=RIGHT></A>
<CENTER>
<H1>Type-Free Combinatory Calculi (c)</H1>

<H2>Pure Combinatory Logic</H2>
</CENTER>
Pure combinatory logic is a simple language of combinators.
The terms of the language, each of which denotes a function, are formed from variables and constants by a single construction, function application.
In the pure system there is a small set of constants all of which are themselves pure combinators, usually the primitive combinators are named S, K and I,
though I is in fact definable in terms of S and K.
<P>
The intended meaning of these constants can be described simply by showing
a corresponding transformation or reduction which the constant may be thought of as effecting.
<P>
The transformations are as follows:
<CENTER>
<TABLE>
<TR>
<TD>I x</TD>
<TD>=</TD>
<TD>x</TD>
</TR>
<TR>
<TD>K x y</TD>
<TD>=</TD>
<TD>x</TD>
</TR>
<TR>
<TD>S f g x</TD>
<TD>=</TD>
<TD>(f x)(g x)</TD>
</TR>
</TABLE>
</CENTER>
This set of combinators has the property of <EM>combinatory completeness</EM> which means that for any function definition of the
form:
<CENTER>
f x = combinatory expression involving x
</CENTER>
<P>
There exists an expression E in S,K and I such that:
<CENTER>
f = E
</CENTER>
<P>
This property establishes the close relationship between Pure Combinatory Logic and the 
<A HREF="cl007.htm">Pure lambda Calculus</A>,  in which a special notation for functional abstraction is available.
It shows that the notation for functional abstraction, though a great convenience, adds no expressiveness to the language.
<P>
As well as having combinatorial completeness, Pure Combinatory Logic is able to express all effectively computable functions over
natural numbers appropriately represented as combinators.
<P>
Pure Combinatory Logic can be extended by moving along any of <A HREF="cl003.htm">The Axes</A> of The 
<A HREF="cl001.htm"><IMG SRC="../../../rbjgifs/lskicube.gif" ALT="Lambda-SKI cube" BORDER=0 ALIGN=MIDDLE></A> Cube.
</CENTER>
<P>
<HR>
<CENTER>
<A HREF="index.htm"><IMG SRC="../../../rbjgifs/up.gif" ALT=up BORDER=0></A>
<A HREF="../../index.htm"><IMG SRC="../../../rbjgifs/home.gif" ALT=home BORDER=0></A>
&copy; <A HREF="../../rbj.htm"><IMG SRC="../../../rbjgifs/rbjin1.gif" ALT=RBJ ALIGN=absmiddle BORDER=0></A>
created 1995/12/9 modified 1999/9/19
</CENTER>
</BODY>



